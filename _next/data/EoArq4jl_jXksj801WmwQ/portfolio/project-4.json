{"pageProps":{"path":"/portfolio/project-4","page":{"__metadata":{"id":"content/pages/portfolio/project-4.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/project-4.md","relProjectPath":"content/pages/portfolio/project-4.md","modelType":"page","modelName":"project","modelLabel":"Project","urlPath":"/portfolio/project-4"},"title":"Social media dashboard with theme switcher","subtitle":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","date":"2020-10-05","thumb_image":"images/16_thumb.jpg","thumb_image_alt":"A Social media dashboard with theme switcher image","image":"images/16_thumb.jpg","image_alt":"A Social media dashboard with theme switcher image","seo":{"title":"Social media dashboard with theme switcher","description":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Social media dashboard with theme switcher","keyName":"property"},{"name":"og:description","value":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","keyName":"property"},{"name":"og:image","value":"images/16_thumb.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Social media dashboard with theme switcher"},{"name":"twitter:description","value":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor."},{"name":"twitter:image","value":"images/16_thumb.jpg","relativeUrl":true}]},"layout":"project","markdown_content":"\n## Demo\n\nEl proyecto esta disponible en [https://arturomauriciodev.github.io/socialMedia/](https://arturomauriciodev.github.io/socialMedia/).\n\n## Tabla de Contenidos\n\n-   [Descripción](#descripción)\n    -   [Mobile](#para-mobile)\n    -   [Desktop](#para-desktop)\n    -   [El reto](#el-reto)\n    -   [Créditos por el diseño y reto](#créditos-por-el-diseño-y-reto)\n-   [Construcción del proyecto](#construcción-del-proyecto)\n    -   [Estructura HTML](#estructura-html)\n    -   [Estilos en CSS](#estilos-en-css)\n    -   [Manipulando el DOM con JavaScript](#manipulando-el-dom-con-javascript)\n-   [Licencia](#licencia)\n-   [Autor](#autor)\n\n## Descripción\n\nEste proyecto realizará la maquetación del siguiente reto en **HTML**, **CSS** y **JavaScript** considerando los siguientes requerimientos:\n\n### Para mobile\n\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/mobile-design-light.jpg?raw=true)\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/mobile-design-dark.jpg?raw=true)\n\n### Para desktop\n\n![Design preview for the Room homepage coding challenge - desktop](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/desktop-preview.jpg?raw=true)\n\n### El reto\n\nEl reto consiste en construir esta página inicial y que se parezca lo más posible al diseño.\n\nLos usuarios deberían poder:\n\n-   Ver el diseño óptimo para el sitio según el tamaño de pantalla de su dispositivo (Mobile First es requerido)\n-   Ver el efecto hover para todos los elementos interactivos de la página\n-   Cambiar el tema de color de su preferencia\n\nTambién se utilizó el archivo de `style-guide.md`, que contiene la información necesaria, de la paleta de colores y fuentes.\n\n### Créditos por el diseño y reto\n\nEste reto pertenece a la lista de retos de [Frontend Mentor](https://www.frontendmentor.io/dashboard). Para más información puede visitar [este enlace](https://www.frontendmentor.io/challenges/social-media-dashboard-with-theme-switcher-6oY8ozp_H).\n\n## Construcción del proyecto\n\nSe construyó utilizando la metodología `mobile first` para dispositivos de 375px, 1024px y 1440px. Asimismo, para los estilos se hace el uso de la metodología `BEM`. También se utiliza `JavaScript` Vanilla para la `manipulación del DOM` haciendo funcional el theme switcher para cambiar el color del tema de acuerdo con su preferencia.\n\nA continuación se mostrará algunos detalles y buenas prácticas:\n\n### Estructura HTML\n\n_Carga independiente de las hojas de estilos._\n\n```\n <link rel=\"stylesheet\" href=\"./styles/styles.css\">\n <link rel=\"stylesheet\" href=\"./styles/desktop1024.css\" media=\"screen and (min-width: 1024px)\">\n <link rel=\"stylesheet\" href=\"./styles/desktop1440.css\" media=\"screen and (min-width: 1440px)\">\n```\n\n_Utilización adecuada de etiquetas para mejorar la accesibilidad._\n\n```\n<article>\n            <h2 class=\"header__h2 light\">\n                Social Media Dashboard\n            </h2>\n            <article class=\"header__article\">\n                <small class=\"header__small light\">\n                Total Followers: 23,004\n                </small>\n                <div class=\"header__div light\">\n                    <p>\n                        Dark Mode\n                    </p>\n                    <label class=\"switch\">\n                  <input id=\"switch\" type=\"checkbox\">\n                  <span class=\"slider light round\"></span>\n                </label>\n                </div>\n            </article>\n        </article>\n```\n\n### Estilos en CSS\n\n_Uso de variables_\n\n```\n:root {\n    font-family: 'Inter', sans-serif;\n    --scroll-gap: 1.5rem;\n    /* Primary */\n    --LimeGreen: hsl(163, 72%, 41%);\n    --BrightRed: hsl(356, 69%, 56%);\n    --Facebook: hsl(208, 92%, 53%);\n    --Twitter: hsl(203, 89%, 53%);\n    --Instagram: linear-gradient(to right, hsl(37, 97%, 70%), hsl(329, 70%, 58%));\n    --YouTube: hsl(348, 97%, 39%);\n    /* #### Light Theme */\n    --White-BG: hsl(0, 0%, 100%);\n    --VeryPaleBlue-TopBGPattern: hsl(225, 100%, 98%);\n    --LightGrayishBlue-CardBG: hsl(227, 47%, 96%);\n    --DarkGrayishBlue-Text: hsl(228, 12%, 44%);\n    --VeryDarkBlue-Text: hsl(230, 17%, 14%);\n    /* #### Light Theme */\n    --Toggle: hsl(230, 22%, 74%);\n    /* #### Dark Theme */\n    --VeryDarkBlue-BG: hsl(230, 17%, 14%);\n    --VeryDarkBlue-Top-BG-Pattern: hsl(232, 19%, 15%);\n    --DarkDesaturatedBlue-CardBG: hsl(228, 28%, 20%);\n    --DesaturatedBlue-Text: hsl(228, 34%, 66%);\n    --White-Text: hsl(0, 0%, 100%);\n    /* #### Dark Theme */\n    --Toggle-dark: linear-gradient(to right, hsl(210, 78%, 56%), hsl(146, 68%, 55%));\n}\n```\n\n_Construcción del slider_\n\n```\n/* The switch - the box around the slider */\n\n.switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 28px;\n}\n\n\n/* Hide default HTML checkbox */\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n\n/* The slider */\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--Toggle);\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider.round.dark {\n    background-image: var(--Toggle-dark);\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 23px;\n    width: 29px;\n    left: 2px;\n    bottom: 2px;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider.dark:before {\n    background-color: var(--VeryDarkBlue-BG);\n}\n\ninput:checked+.slider {\n    background-color: #2196F3;\n}\n\ninput:focus+.slider {\n    box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked+.slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n}\n\n\n/* Rounded sliders */\n\n.slider.round {\n    border-radius: 34px;\n}\n\n.slider.round:before {\n    border-radius: 50%;\n}\n\n.parent {\n    padding: var(--scroll-gap);\n    /* height: 40vh; */\n    overflow: auto;\n    scroll-snap-type: mandatory;\n}\n\n.child {\n    /* height: calc(50vh - 3 * var(--scroll-gap)); */\n    /* scroll-snap-align: center; */\n    padding-top: 0.3rem;\n    display: grid;\n    border-radius: 7px;\n}\n\n.child:not(:last-child) {\n    margin-bottom: var(--scroll-gap);\n}\n\n.child .container {\n    background-color: var(--LightGrayishBlue-CardBG);\n    padding: 0;\n    width: 100%;\n    border-bottom-left-radius: 7px;\n    border-bottom-right-radius: 7px;\n}\n```\n\n_Uso de flexbox_\n\n```\n.container__footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1rem;\n}\n```\n\n### Manipulando el DOM con JavaScript\n\n_Uso de toggle para el menú_\n\n```\nlet switchButton = document.getElementById('switch')\nlet light = document.getElementsByClassName('light')\n\nfunction toggle() {\n    for (let i = 0; i < light.length; i++) {\n        light[i].classList.toggle('dark')\n    }\n}\n\nswitchButton.addEventListener('click', toggle)\n```\n\n## Licencia\n\n> Este proyecto esta bajo la licencia de MIT.\n\n## Autor\n\nMade with 💜 by [ArturoMauricioDev](https://arturomauricio.bio.link/)\n"},"pages":[{"__metadata":{"id":"content/pages/about.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"about.md","relProjectPath":"content/pages/about.md","modelType":"page","modelName":"page","modelLabel":"Page","urlPath":"/about"},"title":"Arturo Mauricio","subtitle":"Desarrollador Full Stack | System Engineer | Web Developer | JavaScript | React.Js | Node | Express | PostgreSQL | Next.Js | Backend | Frontend | HTML/CSS | Linux System Administrator | Educator | +1000 Personas Formadas","image":"images/about2.jpeg","image_alt":"Arturo Mauricio Dev imagen de perfil","seo":{"title":"Arturo Mauricio Dev","description":"This is the Arturo Mauricio Dev's about","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"This is the Arturo Mauricio Dev's about","keyName":"property"},{"name":"og:description","value":"Desarrollador Full Stack | System Engineer | Web Developer | JavaScript | React.Js | Node | Express | PostgreSQL | Next.Js | Backend | Frontend | HTML/CSS | Linux System Administrator | Educator | +1000 Personas Formadas","keyName":"property"},{"name":"og:image","value":"images/about.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Acerca de Arturo Mauricio Dev"},{"name":"twitter:description","value":"Desarrollador Full Stack | System Engineer | Web Developer"},{"name":"twitter:image","value":"images/about.jpg","relativeUrl":true}]},"layout":"page","markdown_content":"\nSoy ingeniero en Sistemas, actualmente me especializo en el desarrollo web como Fullstack developer. Ayudo a las empresas y startups a crear puentes digitales entre sus empleados y/o con sus clientes para realizar tareas cotidianas de forma inmediata a bajos costos y de manera efectiva. Me apasiona dar soluciones tecnológicas a tareas del día a día y convertirlas en productos, que son usados por los empleados de la compañía y/o por sus clientes.\n\nDesarrollo aplicaciones web utilizando herramientas del stack MERN (MongoDB, Express, React y Node) de acuerdo con los requerimientos del usuario considerando metodologías UX, Component Driven Development (CDD) con la ayuda de herramientas basadas en JavaScript para lograr un resultado de impacto.\nMe encanta descubrir nuevas formas e ideas aprovechando mi background académico de enseñanza en diferentes universidades para brindar soluciones más saludables a los empleados de compañías y/o los usuarios de aplicaciones.\n\nConecto con estudiantes y profesionales que recién van empezando para guiarles y enseñarles sobre el desarrollo de aplicaciones web. De esta manera construir una comunidad junto a ellos donde todos nos apoyemos frente a los problemas del día a día.\n\nQuiero colaborar y generar las mejores aplicaciones web para los usuarios que sean de utilidad en su vida cotidiana y les brinden bienestar y mejor calidad de vida.\n\n    👉 Manejo en el área laboral: HTML5, CSS3, Sass, MUI, JavaScript es6+, React.js y NextJs.\n    👉 Desarrollo utilizando: React Hooks, React Router y su despliegue.\n    👉 Realizo la manipulación del DOM y estructura de datos en JS.\n    👉 He trabajado consumiendo APIs Rest\n    👉 He trabajado costruyendo APIs Rest en Express conectando a bases de datos PostgreSQL\n    👉 Desarrollo utilizando Node, Express, npm, passport, jwt, postgreSQL y Docker\n    👉 He trabajado construyendo aplicaciones en Next.js\n    👉 He trabajado con git y GitHub\n    👉 Administro sistemas basados en Linux\n\n_Para trabajar juntos o si deseas alguna mentoría contáctame._\n"},{"__metadata":{"id":"content/pages/blog/Deberia-crear-mis-proyectos-React-con-Vite.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"blog/Deberia-crear-mis-proyectos-React-con-Vite.md","relProjectPath":"content/pages/blog/Deberia-crear-mis-proyectos-React-con-Vite.md","modelType":"page","modelName":"post","modelLabel":"Post","urlPath":"/blog/deberia-crear-mis-proyectos-react-con-vite"},"title":"¿Debería crear mis proyectos React con Vite?","subtitle":"Otra forma de crear proyectos en React","excerpt":"En este artículo aprenderás a crear proyectos de React con Vite.","date":"2021-06-21","thumb_image":"images/18.jpg","thumb_image_alt":"React - Vite","image":"images/14.png","image_alt":"React - Vite","seo":{"title":"The function of design is letting design function","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"The function of design is letting design function","keyName":"property"},{"name":"og:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore","keyName":"property"},{"name":"og:image","value":"images/13.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"The function of design is letting design function"},{"name":"twitter:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore"},{"name":"twitter:image","value":"images/13.jpg","relativeUrl":true}]},"layout":"post","img1":{"data":"images/13jpg"},"markdown_content":"\nProbablemente realizaste muchos proyectos con React, muchos de ellos los creaste utilizando create-react-app. Es normal, esta manera de crear tus proyectos es una práctica muy usual entre los desarrolladores. Pero te preguntaste ¿si hay otras formas de crear proyectos? Por su puesto que sí, hay varias y una de ellas es utilizando Vite.\n\n## Tabla de Contenidos\n\n-   [¿Por qué deberías usar Vite?](#¿por-qué-deberías-usar-vite)\n-   [Vamos a la acción](#vamos-a-la-acción)\n-   [Resolviendo problemas de versión](#resolviendo-problemas-de-versión)\n\n## ¿Por qué deberías usar Vite?\n\nSi bien con el tiempo, hemos visto herramientas como Webpack, Rollup y Parcel , que mejoraron enormemente la experiencia de desarrollo para los desarrolladores frontend. Hoy en día no es raro que los proyectos a gran escala contengan miles de módulos. Estamos empezando a encontrar un cuello de botella en el rendimiento de las herramientas basadas en JavaScript: a menudo puede llevar una espera excesivamente larga (¡algunas veces hasta minutos!) Para activar un servidor de desarrollo, e incluso con HMR, las ediciones de archivos pueden tardar un par de segundos en reflejarse en el navegador. El ciclo de retroalimentación lento puede afectar en gran medida la productividad y la felicidad de los desarrolladores.\n\nVite tiene como objetivo abordar estos problemas aprovechando los nuevos avances en el ecosistema: la disponibilidad de módulos ES nativos en el navegador y el surgimiento de herramientas JavaScript escritas en lenguajes de compilación a nativos.\n\nY ¿De dónde viene toda esta iniciativa para optimizar y resolver estos problemas? Pues del creador de Vue Js, Evan You. Para todos aquellos que no conocen la trayectoria de Evan es bueno mencionar que trabajo para Meteor Development Group y posteriormente paso un par de años en Google Creative Lab donde también formo parte de los inicios de Angular. Fue allí, en Mountain View que decidió ser un rebelde e ir en contra corriente para crear su propia librería de JavaScript, en donde las cosas se mantengan simples y el rendimiento sea el mejor. Es así como nació Vue Js, por eso no me sorprende en nada los objetivos propuestos por Vite Js. También es obvio que existe una coincidencia, ambos proyectos son nombrados con palabras en francés.\n\n## Vamos a la acción.\n\nEvan en su cuenta de Twitter nos indica las diferentes maneras de como podemos iniciar un proyecto con Vite.\n\n![Evan Tweet](https://i49.servimg.com/u/f49/19/27/49/47/1510.png)\n\nAmbas nos ayudarían a lograr nuestro objetivo, pero esta vez yo utilizare:\n\n```\nnpm init vite@latest\n```\n\nEjecutamos el comando y a continuación nos pregunta el nombre del proyecto. Esta vez lo nombraré como vite-project.\n\n![npm init vite@latest](https://i49.servimg.com/u/f49/19/27/49/47/16268910.png)\n\nLuego debemos indicar el framework a utilizar, elegimos react.\n\n![Elegimos React](https://i49.servimg.com/u/f49/19/27/49/47/16268911.png)\n\n![Elegimos React](https://i49.servimg.com/u/f49/19/27/49/47/16268912.png)\n\n¡Y eso es todo! Ya creamos nuestro primer proyecto con Vite en cuestión de segundos. Para finalizar nos indica 3 sencillos pasos para hacerlo correr.\n\n![Debes ejecutar lo siguiente](https://i49.servimg.com/u/f49/19/27/49/47/16268913.png)\n\nAhora es cuando a más de uno les habrá saltado un error y comenzaran a sentirse frustrados. Esperen un segundo respiren profundo que acá les traigo la solución. El error más común y por el cual no llega a funcionar es porque la versión de NodeJs no es la adecuada. Para que ViteJs comience a andar necesitamos la versión 12 o posterior. Vamos a solucionarlo.\n\n## Resolviendo problemas de versión.\n\nLa manera más sencilla y eficiente de resolver los problemas de versión de NodeJs es utilizando una maravillosa herramienta de gestión de versiones para NodeJs llamada nvm. Para instalarla ejecutamos el siguiente comando.\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nUna vez instalado, reinicia tu terminal y ya podemos ver las versiones de NodeJs que tenemos en nuestro sistema con nvm list.\n\n![nvm list](https://i49.servimg.com/u/f49/19/27/49/47/16268914.png)\n\nLuego procedemos a verificar que versiones están disponibles en los repositorios para realizar la instalación de la versión correcta para la tarea que deseamos realizar. Para ello utilizo el comando nvm ls-remote --lts. A continuación nos mostrará una larga lista con las versiones de NodeJs.\n\n![version list](https://i49.servimg.com/u/f49/19/27/49/47/16268915.png)\n\nUna vez identificada la versión que requerimos procedemos a instalar. Para esta tarea en específico instalamos la versión 12.2.\n\n![instalación](https://i49.servimg.com/u/f49/19/27/49/47/16268916.png)\n\nAhora verificamos con nvm list la versión de NodeJs con la cual está trabajando el sistema. También es bueno mencionar que con nvm podremos cambiar las diferentes versiones de NodeJs de acuerdo a la necesidad que tengamos, sin tener que instalar o desinstalar. Todas las versiones coexistirán, solo tendremos que activarlas o desactivarlas.\n\n![Se verifica la instalación](https://i49.servimg.com/u/f49/19/27/49/47/16268917.png)\n\n¡Ahora si a iniciar el proyecto!\n\n![npm install](https://i49.servimg.com/u/f49/19/27/49/47/16268918.png)\n\n![npm run dev](https://i49.servimg.com/u/f49/19/27/49/47/16268919.png)\n\nLo logramos ViteJs ya está funcionando.\n\n![Está funcionando, se muestra la url](https://i49.servimg.com/u/f49/19/27/49/47/16268920.png)\n\n¡Felicidades! Acabas de crear tu primer proyecto con ViteJs.\n\n![Proyecto React con Vite funcionando en el navegador](https://i49.servimg.com/u/f49/19/27/49/47/16268921.png)\n"},{"__metadata":{"id":"content/pages/blog/atomic-design.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"blog/atomic-design.md","relProjectPath":"content/pages/blog/atomic-design.md","modelType":"page","modelName":"post","modelLabel":"Post","urlPath":"/blog/atomic-design"},"title":"¿Cómo utilizo atomic design en mis proyectos ReactJs?","subtitle":"Atomic Design es una metodología concebida por Brad Frost, que pretende acabar con las inconsistencias y optimizar el diseño y desarrollo al máximo en aplicaciones modernas, de ese modo podemos aplicar la composición de componentes en ReactJs.","excerpt":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros.","date":"2022-09-09","thumb_image":"images/20.jpg","thumb_image_alt":"atomic design image","image":"images/20.jpg","image_alt":"atomic design image","seo":{"title":"¿Cómo utilizo atomic design en mis proyectos ReactJs?","description":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros.","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"¿Cómo utilizo atomic design en mis proyectos ReactJs?","keyName":"property"},{"name":"og:description","value":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros.","keyName":"property"},{"name":"og:image","value":"images/20.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"¿Cómo utilizo atomic design en mis proyectos ReactJs?"},{"name":"twitter:description","value":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros."},{"name":"twitter:image","value":"images/20.jpg","relativeUrl":true}]},"layout":"post","img1":{"data":"images/20.jpg"},"markdown_content":"\nAtomic Design nace a partir de la inquietud de Brad Frost de aplicar sus clases de química de la secundaria a otros campos e industrias. Su profesor, el Sr. Rae, tenía la reputación de tener una de clases más difíciles en su escuela debido a que sus estudiantes tenían que equilibrar cientos de ecuaciones químicas. Recordemos un poco sobre química de secundaria, sabemos que las reacciones químicas están representadas por ecuaciones químicas que muestran como los átomos se combinan para formar moléculas. ¡Voilà! ¡Es así como empezó todo!\n\nEl mundo es increíblemente complejo, es natural que este principio sobre las reacciones químicas sea aplicado a otros campos abordando problemas similares, por ejemplo el diseño de aplicaciones para distintos dispositivos como teléfonos móviles, tabletas, smart TVs, consolas de juegos, lentes de VR y AR, etc. este proceso es realmente complejo y se requieren procesos que faciliten este desarrollo y eviten los errores. Atomic Design utiliza este principio de química de secundaria, y viene a dar en el clavo, uniendo disciplinas como el diseño de aplicaciones y el desarrollo bajo un mismo concepto, el de _`diseñar por componentes`_.\n\n## Tabla de Contenidos\n\n-   [Composición de componentes](#composición-de-componentes)\n-   [Los elementos de Atomic Design](#los-elementos-de-atomic-design)\n    -   [Átomos](#átomos)\n    -   [Moléculas](#moléculas)\n    -   [Organismos](#organismos)\n    -   [Plantillas](#plantillas)\n    -   [Páginas](#páginas)\n-   [Llevando todo a código](#llevando-todo-a-código)\n    -   [ProductRow](#productrow)\n    -   [ProductCatergoryRow](#productcatergoryrow)\n    -   [ProductTable](#producttable)\n    -   [SearchBar](#searchbar)\n    -   [FilterableProductTable](#filterableproducttable)\n\n## Composición de componentes\n\nLa composición de componentes es un principio fundamental en ReactJS, te ayuda a diseñar tus componentes de modo que sean muy flexibles, y que se integren entre sí para cambiar un resultado visual o su funcionamiento dentro de la aplicación sin dificultades. Se crean componentes de fácil acoplamiento, es así como son fáciles de reutilizar, mover e incluso eliminar.\n\n![Piezas de lego](https://i49.servimg.com/u/f49/19/27/49/47/blokoc10.jpg)\n\nSon como piezas de lego cada unidad con su forma, color y estructura propia, que combinándolos de una manera se podría construir un edificio y si los combinamos de otra manera podríamos construir un tractor o lo que nuestra propia creatividad e imaginación nos permita hacerlo. A esto le llamamos composición de componentes.\n\n![Construyendo con piezas de lego](https://i49.servimg.com/u/f49/19/27/49/47/imagen10.jpg)\n\nPara realizar la composición de componentes utilizando la metodología Atomic Design debemos comenzar desde los elementos más pequeños de una aplicación, integrándolos uno a uno para formar componentes más grandes que irán convirtiéndose eventualmente en plantillas y páginas. Pero, ¿cómo vamos estructurándolos uno a uno? Lo haremos con:\n\n> El principio de responsabilidad única.\n\n🤯 ¿En qué consiste este principio? Para dar una buena explicación acerca de este principio debemos conocer y seguir las siguientes reglas.\n\n-   **Los átomos** son los componentes básicos, cada átomo como cada elemento químico tiene propiedades distintas a cualquier otro átomo y no se lo puede descomponer más sin perder su significado. Son la unidad funcional más pequeña.\n\n-   **Las moléculas** son grupos de dos o más átomos que se mantienen unidos. Esta combinación entre átomos adquiere por sí misma sus propias propiedades únicas y funcionan en conjunto brindando una única funcionalidad.\n\n-   **Los organismos** son conjuntos de moléculas que funcionan juntas como una unidad brindando una única funcionalidad, estas estructuras son relativamente complejas, varían desde organismos unicelulares hasta organismos sofisticados, y todas ellas tienen un límite de responsabilidad.\n\nEn esta descripción, se simplifican muchas cosas de la composición química, pero en sí nos da la esencia básica para la composición de componentes, utilizando el principio de responsabilidad única en nuestras aplicaciones. A continuación precisemos aún más estos 5 elementos que componen esta metodología.\n\n## Los elementos de Atomic Design.\n\n### Átomos\n\nSon componentes básicos, estos no se los puede desglosar más sin dejar de ser funcionales. Cada átomo tienen sus propias propiedades únicas. Pueden ser: botones, avatares, inputs de formularios, párrafos, etc.\n\n![Identificando átomos en una vista](https://i49.servimg.com/u/f49/19/27/49/47/imagen10.png)\n\n### Moléculas\n\nSon grupos de átomos unidos entre sí que adquieren nuevas propiedades distintas, funcionan juntos como una unidad. Por ejemplo:\n\nUn input de búsqueda y un botón pueden unirse para crear una molécula que forma parte de un formulario de búsqueda. Cuando se combinan estos átomos llegan a tener un propósito. Esta molécula llega a ser un componente simple, portátil y reutilizable que se puede colocar en cualquier lugar donde se necesite realizar búsquedas.\n\n![Identificando moléculas en una vista](https://i49.servimg.com/u/f49/19/27/49/47/imagen11.png)\n\nLa creación de componentes simples ayuda a los diseñadores y desarrolladores a emplear el principio de responsabilidad única. Dicho en otras palabras \"hacer una cosa y hacerlo bien\"\n\n### Organismos\n\nSon componentes relativamente complejos, compuestos por grupos de moléculas y/o átomos y/u otros organismos. Estos organismos forman secciones distintas. Por ejemplo, cuando unimos el logo, los iconos, texto y una molécula de búsqueda para crear una navegación en la aplicación. La navegación en sí es una sección independiente con sus propias propiedades, en mobile se puede ver con su burguer menu de una manera diferente a la versión desktop donde no se muestra el burguer menu, ya que se despliega sus opciones directamente.\n\n![Identificando organismos en una vista](https://i49.servimg.com/u/f49/19/27/49/47/imagen12.png)\n\n### Plantillas\n\nEn esta instancia, la plantilla contiene los componentes creados en las anteriores instancias y articulan la estructura de la app. Se compone principalmente de grupos de organismos unidos para formar una vista de la aplicación. Aquí se empieza a ver ya el diseño en acción. Con las plantillas los clientes comienzan a ver el diseño final de la aplicación.\n\nLas plantillas definen el esqueleto de la aplicación, muestran componentes clave en acción, demuestra su contenido con respecto a tamaños, espacios que ocupa y la longitud de los textos y caracteres.\n\n### Páginas\n\nLas páginas llegan a ser instancias de las plantillas, dicho de otra manera, las páginas son plantillas con contenido específico y real que muestran como se ve una interfaz de la aplicación. Los usuarios verán e interactuarán obteniendo una experiencia de su uso y utilizando las funcionalidades que la aplicación les brinda.\n\nEn esta etapa se realiza una revisión de que todo se llegue a ver bien y de que todo funcione correctamente. En caso de que algo no se vea coherente y no brinde la función esperada, se debe retroceder y modificar las moléculas, organismos y plantillas para resolver las necesidades de los usuarios.\n\n## Llevando todo a código\n\nA continuación, vamos a dividir una interfaz de usuario en una jerarquía de componentes utilizando el principio de responsabilidad única. Y lo llevaremos a código utilizando ReactJS.\n\n![Dividiendo la vista de una app de acuerdo con atomic design](https://i49.servimg.com/u/f49/19/27/49/47/imagen13.png)\n\nComo se observa tenemos una aplicación que muestra productos de deportes y productos electrónicos con sus respectivos precios. Estos productos están divididos por sus categorías. También, se cuenta con una barra de búsquedas la cual filtra el producto deseado de las listas de productos, asimismo se considera solo mostrar los productos que tienen stock.\n\nAhora comenzaremos a identificar los diferentes componentes de acuerdo con la metodología atomic design.\n\n1. **FilterableProductTable** (café): Contiene la totalidad de componentes.\n\n2. **SearchBar** (azul): Componente para realizar búsquedas y filtrado, su responsabilidad es mostrar los productos de acuerdo con los parámetros que el usuario vaya ingresando.\n\n3. **ProductTable** (verde): Muestra la colección de productos de todas las categorías según el nombre y el precio.\n\n4. **ProductCategoryRow** (turquesa): Muestra los productos de una categoría en específico.\n\n5. **ProductRow** (rojo): Muestra un producto, su nombre y precio en una fila.\n\n### ProductRow\n\nDe esta manera quedaría el código del componente ProductRow.\n\n![Componente ProductRow](https://i49.servimg.com/u/f49/19/27/49/47/carbon10.png)\n\n### ProductCatergoryRow\n\nEste componente recibe el título que mostrará en su categoría y el arreglo de productos que pertenecen a dicha categoría, con esa información puede construirse por sí mismo. También crea componentes ProductRow por cada producto reutilizando código.\n\n![Componente ProductCategoryRow](https://i49.servimg.com/u/f49/19/27/49/47/carbon11.png)\n\n### ProductTable\n\nSe construye este componente sobre la base de los anteriores componentes, para el ejemplo se utiliza dos categorías, por lo cual se le envía el título y el arreglo de productos correspondiente.\n\n![Componente ProductTable](https://i49.servimg.com/u/f49/19/27/49/47/carbon12.png)\n\n### SearchBar\n\nEste componente quedaría de la siguiente manera.\n\n![Componente SearchBar](https://i49.servimg.com/u/f49/19/27/49/47/carbon13.png)\n\n### FilterableProductTable\n\nFinalmente, todos los componentes anteriormente construidos son utilizados en este componente. También es bueno resaltar que cada uno de ellos es independiente en sus propiedades y estados. Para conseguir la funcionalidad esperada, los componentes interactúan unos con otros utilizando useContext.\n\n![Componente FilterableProductTable](https://i49.servimg.com/u/f49/19/27/49/47/carbon14.png)\n\nPara obtener toda la información correspondiente a este ejemplo puedes visitar el siguiente [GitHub](https://github.com/ArturoMauricioDev/product-table).\n\nAhora es tu turno, ya puedes construir tu siguiente aplicación utilizando la metodología Atomic Design.\n"},{"__metadata":{"id":"content/pages/blog/desplegando-una-aplicación-React-en-Github-Pages.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"blog/desplegando-una-aplicación-React-en-Github-Pages.md","relProjectPath":"content/pages/blog/desplegando-una-aplicación-React-en-Github-Pages.md","modelType":"page","modelName":"post","modelLabel":"Post","urlPath":"/blog/desplegando-una-aplicación-react-en-github-pages"},"title":"Desplegando una aplicación React en GitHub Pages","subtitle":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","excerpt":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","date":"2022-08-14","thumb_image":"images/19.jpg","thumb_image_alt":"Aplicación React en GitHub Pages.","image":"images/19.jpg","image_alt":"Aplicación React en GitHub Pages.","seo":{"title":"Desplegando una aplicación React en GitHub Pages","description":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"Desplegando una aplicación React en GitHub Pages","keyName":"property"},{"name":"og:description","value":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","keyName":"property"},{"name":"og:image","value":"images/19.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Desplegando una aplicación React en GitHub Pages"},{"name":"twitter:description","value":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages."},{"name":"twitter:image","value":"images/19.jpg","relativeUrl":true}]},"layout":"post","markdown_content":"\n## Tabla de Contenidos\n\n-   [Prerrequisitos](#prerrequisitos)\n-   [A la acción](#a-la-acción)\n-   [Ingresa a tu app](#ingresa-a-tu-app)\n\n## Prerrequisitos\n\nPara poder desplegar tu aplicación React en GitHub Pages necesitas tener instalado lo siguiente:\n\n1. Node y npm\n\n```\n$ node --version\nv16.13.2\n```\n\n```\n$ npm --version\n8.1.2\n```\n\nSi deseas instalar o manejar las versiones de NodeJs en tu sistema, puedes revisar este otro [artículo.](https://arturomauriciodev.netlify.app/blog/deberia-crear-mis-proyectos-react-con-vite/#resolviendo-problemas-de-versión)\n\n2. Git\n\n```\n$ sudo apt install git\n```\n\n3. También debes tener una cuenta de [GitHub.](https://github.com/)\n\n## A la acción\n\n1. Crea un repositorio en GitHub.\n\n    - Asegúrate que la visibilidad de tu repositorio sea **público**.\n\n2. Crea tu aplicación React.\n   Para ello puedes utilizar el siguiente comando:\n\n```\n$ npx create-react-app my-app\n```\n\nIngresa al directorio creado.\n\n```\n$ cd my-app\n```\n\nEjecuta la aplicación.\n\n```\n$ npm run start\n```\n\nVerifica en el navegador que la aplicación esté ejecutándose.\n\n3. Instala el paquete **_gh-pages_**, para ello utiliza el siguiente comando.\n\n```\nnpm install gh-pages --save-dev\n```\n\nPuedes verificar la instalación de **_gh-pages_** en el archivo **_package.json_**.\n\n4. Agrega la propiedad **_homepage_** en el archivo **_package.json_**. Para ello puedes utilizar [Visual Studio Code.](https://code.visualstudio.com/)\n\n_La propiedad homepage tiene el siguiente formato._\n\n```\nhttps://{username}.github.io\n```\n\nDebes reemplazar username por el nombre de usuario que tienes en GitHub.\n\nTu archivo **_package.json_**, quedaría de la siguiente manera.\n\n```\n\"name\": \"my-app\",\n  \"version\": \"0.1.0\",\n  \"homepage\": \"https://ArturoMauricioDev.github.io/my-app\",\n  \"private\": true,\n```\n\n5. Agrega los **_scripts_** de predeploy y deploy en tu **_package.json_**, tu archivo quedaría de esta manera.\n\n```\n \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\",\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\"\n  }\n```\n\n6. Conecta tu repositorio local con el remoto (GitHub).\n\n```\n$ git remote add origin https://github.com/{username}/{repo-name}.git\n```\n\n7. Finalmente, despliega tu aplicación React en GitHub Pages.\n\n```\n$ npm run deploy -- -m \"Despliegue de la app en GitHub Pages\"\n```\n\nGitHub Pages automáticamente realizará un commit en la rama _gh-pages_ del repositorio remoto, de esa manera quedará todo listo en cuanto al despliegue. 🚀\n\n## Ingresa a tu app\n\nPara obtener la url de tu app debes ingresar a **_Settings_** de tu repositorio y a la sección **_Pages_**, ahí encontrarás una url similar a https://gitname.github.io/my-app.\n"},{"__metadata":{"id":"content/pages/blog/index.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"blog/index.md","relProjectPath":"content/pages/blog/index.md","modelType":"page","modelName":"blog","modelLabel":"Blog","urlPath":"/blog"},"title":"Blog","subtitle":"Noticias, tips y concejos destacados","hide_title":false,"col_number":"three","seo":{"title":"Blog","description":"This is the Arturo Mauricio´s blog","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Blog","keyName":"property"},{"name":"og:description","value":"El blog de Arturo Mauricio Dev","keyName":"property"},{"name":"og:image","value":"images/11.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Blog"},{"name":"twitter:description","value":"El blog de Arturo Mauricio Dev"},{"name":"twitter:image","value":"images/11.jpg","relativeUrl":true}]},"layout":"blog","markdown_content":null},{"__metadata":{"id":"content/pages/contact.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"contact.md","relProjectPath":"content/pages/contact.md","modelType":"page","modelName":"advanced","modelLabel":"Advanced Page","urlPath":"/contact"},"title":"Contact","hide_title":false,"sections":[{"section_id":"contact-form","type":"section_form","content":"Hi there! Thank you so much for your interest in working together. Please fill the contact form below or send us an email at [example@example.com](mailto:example@example.com).","form_id":"contactForm","form_action":"/thank-you","form_fields":[{"input_type":"text","name":"name","label":"Name","default_value":"Your name","is_required":true},{"input_type":"email","name":"email","label":"Email","default_value":"Your email address","is_required":true},{"input_type":"select","name":"subject","label":"Subject","default_value":"Please select","options":["Error on the site","Sponsorship","Other"]},{"input_type":"textarea","name":"message","label":"Message","default_value":"Your message"},{"input_type":"checkbox","name":"consent","label":"I understand that this form is storing my submitted information so I can be contacted."}],"submit_label":"Send Message"}],"seo":{"title":"Contact","description":"This is the contact page","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Contact","keyName":"property"},{"name":"og:description","value":"This is the contact page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Contact"},{"name":"twitter:description","value":"This is the contact page"}]},"layout":"advanced","markdown_content":null},{"__metadata":{"id":"content/pages/index.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"index.md","relProjectPath":"content/pages/index.md","modelType":"page","modelName":"advanced","modelLabel":"Advanced Page","urlPath":"/"},"title":"Home","hide_title":true,"sections":[{"section_id":"hero","type":"section_hero","title":"Hola, Soy Arturo Mauricio.   @ArturoMauricioDev","content":"Desarrollador Full Stack | System Engineer | Web Developer | JavaScript | React.Js | Node | Express | PostgreSQL | Next.Js | Backend | Frontend | HTML/CSS | Linux System Administrator | Educator | +1000 Personas Formadas","actions":[{"label":"Contáctame","url":"/contact","style":"button"}]},{"section_id":"latest-posts","type":"section_posts","title":"Publicaciones del Blog","subtitle":"Últimas publicaciones","posts_number":3,"col_number":"three","actions":[{"label":"Visitar el Blog","url":"blog","style":"button"}]},{"section_id":"latest-projects","type":"section_portfolio","layout_style":"mosaic","title":"Portafolio","subtitle":"Trabajos más recientes","projects_number":6,"view_all_label":"Ver más","view_all_url":"portfolio"}],"seo":{"title":"Arturo Mauricio Dev","description":"Arturo Mauricio's Protafolio with Next.js","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Arturo Mauricio Dev","keyName":"property"},{"name":"og:description","value":"Arturo Mauricio's Protafolio with Next.js","keyName":"property"},{"name":"og:image","value":"images/Developer-and-Educator.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Arturo Mauricio Dev"},{"name":"twitter:description","value":"Arturo Mauricio's Protafolio with Next.js"},{"name":"twitter:image","value":"images/Developer-and-Educator.png","relativeUrl":true}]},"layout":"advanced","markdown_content":null},{"__metadata":{"id":"content/pages/portfolio/index.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/index.md","relProjectPath":"content/pages/portfolio/index.md","modelType":"page","modelName":"portfolio","modelLabel":"Portfolio","urlPath":"/portfolio"},"title":"Portfolio","subtitle":"En esta sección encontrarás los proyectos en los que ando trabajando.","layout_style":"mosaic","seo":{"title":"Portfolio","description":"Este es el portafolio de ArturoMauricioDev","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Portfolio","keyName":"property"},{"name":"og:description","value":"Este es el portafolio de ArturoMauricioDev","keyName":"property"},{"name":"og:image","value":"images/17.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Portfolio"},{"name":"twitter:description","value":"Este es el portafolio de ArturoMauricioDev"},{"name":"twitter:image","value":"images/17.jpg","relativeUrl":true}]},"layout":"portfolio","markdown_content":null},{"__metadata":{"id":"content/pages/portfolio/project-1.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/project-1.md","relProjectPath":"content/pages/portfolio/project-1.md","modelType":"page","modelName":"project","modelLabel":"Project","urlPath":"/portfolio/project-1"},"title":"Room home page","subtitle":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","date":"2020-09-28","thumb_image":"images/15_thumb.jpg","thumb_image_alt":"Room home page image","image":"images/15_thumb.jpg","image_alt":"Room home page image","seo":{"title":"Room home page","description":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Room home page","keyName":"property"},{"name":"og:description","value":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","keyName":"property"},{"name":"og:image","value":"images/15_thumb.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Room home page"},{"name":"twitter:description","value":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor."},{"name":"twitter:image","value":"images/15_thumb.jpg","relativeUrl":true}]},"layout":"project","markdown_content":"\n## Demo\n\nEl proyecto esta disponible en [https://room.js.org/](https://room.js.org/). Asimismo este es su [repositorio](https://github.com/ArturoMauricioDev/roomHomepage).\n\n## Tabla de Contenidos\n\n-   [Descripción](#descripción)\n    -   [Mobile](#para-mobile)\n    -   [Desktop](#para-desktop)\n    -   [El reto](#el-reto)\n    -   [Créditos por el diseño y reto](#créditos-por-el-diseño-y-reto)\n-   [Construcción del proyecto](#construcción-del-proyecto)\n    -   [Estructura HTML](#estructura-html)\n    -   [Estilos en CSS](#estilos-en-css)\n    -   [Manipulando el DOM con JavaScript](#manipulando-el-dom-con-javascript)\n-   [Licencia](#licencia)\n-   [Bonus](#bonus)\n-   [Autor](#autor)\n\n<!-- toc -->\n\n## Descripción\n\nEste proyecto realizará la maquetación del siguiente reto en `HTML`, `CSS` y `JavaScript` considerando los siguientes requerimientos:\n\n### Para mobile\n\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/roomHomepage/raw/master/design/mobile-design.jpg)\n\n### Para desktop\n\n![Design preview for the Room homepage coding challenge - desktop](https://github.com/ArturoMauricioDev/roomHomepage/raw/master/design/desktop-preview.jpg)\n\n### El reto\n\nEl reto consiste en construir esta página inicial de una e-commerce logrando que se parezca lo más posible al diseño.\n\nLos usuarios deberían poder:\n\n-   Ver el diseño óptimo para el sitio según el tamaño de pantalla de su dispositivo (`Mobile First` es requerido)\n-   Ver el estado hover para todos los elementos interactivos en la página.\n-   Navegar con el slider.\n\nTambién se utilizó el archivo de `style-guide.md`, que contiene la información necesaria, de la paleta de colores y fuentes.\n\n### Créditos por el diseño y reto\n\nEste reto pertenece a la lista de retos de [Frontend Mentor](https://www.frontendmentor.io/dashboard). Para más información puede visitar [este enlace](https://www.frontendmentor.io/challenges/room-homepage-BtdBY_ENq).\n\n## Construcción del proyecto\n\nSe construyó utilizando la metodología `mobile first` para dispositivos de 375px, 1024px y 1440px. Asimismo, para los estilos se hace el uso de la metodología `BEM`. También se utiliza `JavaScript` Vanilla para la `manipulación del DOM` en el menú de la aplicación mobile y en el slider tanto en mobile como en desktop.\n\nA continuación se mostrará algunos detalles y buenas prácticas:\n\n### Estructura HTML\n\n_Carga independiente de las hojas de estilos._\n\n```\n<link rel=\"stylesheet\" href=\"./styles/style.css\">\n<link rel=\"stylesheet\" href=\"./styles/desktop1024.css\" media=\"screen and (min-width: 1024px)\">\n<link rel=\"stylesheet\" href=\"./styles/desktop1440.css\" media=\"screen and (min-width: 1440px)\">\n```\n\n_Optimización de carga de imágenes según el dispositivo._\n\n```\n<picture>\n  <source media=\"(min-width:1024px)\" srcset=\"./images/desktop-image-hero-1.jpg\">\n  <img src=\"./images/mobile-image-hero-1.jpg\" alt=\"\">\n</picture>\n```\n\n### Estilos en CSS\n\n_Uso de variables_\n\n```\n:root{\n    --DarkGray: hsl(0, 0%, 63%);\n    --Black: hsl(0, 0%, 0%);\n    --White: hsl(0, 0%, 100%);\n    --VeryDarkGray: hsl(0, 0%, 27%);\n    font-family: 'Spartan', sans-serif;\n}\n```\n\n_Uso de un toggle para el menú mobile_\n\n```\n.menu.toggle{\n    display: none;\n}\n\n.menu{\n    position: absolute;\n    background: var(--White);\n    display: flex;\n    justify-content: space-between;\n    height: 80px;\n    width: 100%;\n    transition: .3s;\n}\n```\n\n_Uso de flexbox_\n\n```\n.topContainer{\n    display: flex;\n    position: absolute;\n    width: 50%;\n}\n```\n\n### Manipulando el DOM con JavaScript\n\n_Uso de toggle para el menú_\n\n```\nlet menu = document.getElementById('menu')\nlet burger = document.getElementById('burger')\nlet closeButton = document.getElementById('close')\n\nfunction toggleMenu(){\n    menu.classList.toggle('toggle')\n}\n\nburger.addEventListener('click', toggleMenu)\ncloseButton.addEventListener('click', toggleMenu)\n```\n\n## Licencia\n\n> Este proyecto esta bajo la licencia de MIT.\n\n## Bonus\n\nSe puede acceder al proyecto por medio del dominio [https://room.js.org/](https://room.js.org/). Para utilizarlo en este proyecto se realizó la integración del proyecto [https://js.org/](https://js.org/), para más información visita su [sitio.](https://js.org/)\n\n## Autor\n\nMade with 💜 by [ArturoMauricioDev](https://arturomauricio.bio.link/)\n"},{"__metadata":{"id":"content/pages/portfolio/project-4.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/project-4.md","relProjectPath":"content/pages/portfolio/project-4.md","modelType":"page","modelName":"project","modelLabel":"Project","urlPath":"/portfolio/project-4"},"title":"Social media dashboard with theme switcher","subtitle":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","date":"2020-10-05","thumb_image":"images/16_thumb.jpg","thumb_image_alt":"A Social media dashboard with theme switcher image","image":"images/16_thumb.jpg","image_alt":"A Social media dashboard with theme switcher image","seo":{"title":"Social media dashboard with theme switcher","description":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Social media dashboard with theme switcher","keyName":"property"},{"name":"og:description","value":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","keyName":"property"},{"name":"og:image","value":"images/16_thumb.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Social media dashboard with theme switcher"},{"name":"twitter:description","value":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor."},{"name":"twitter:image","value":"images/16_thumb.jpg","relativeUrl":true}]},"layout":"project","markdown_content":"\n## Demo\n\nEl proyecto esta disponible en [https://arturomauriciodev.github.io/socialMedia/](https://arturomauriciodev.github.io/socialMedia/).\n\n## Tabla de Contenidos\n\n-   [Descripción](#descripción)\n    -   [Mobile](#para-mobile)\n    -   [Desktop](#para-desktop)\n    -   [El reto](#el-reto)\n    -   [Créditos por el diseño y reto](#créditos-por-el-diseño-y-reto)\n-   [Construcción del proyecto](#construcción-del-proyecto)\n    -   [Estructura HTML](#estructura-html)\n    -   [Estilos en CSS](#estilos-en-css)\n    -   [Manipulando el DOM con JavaScript](#manipulando-el-dom-con-javascript)\n-   [Licencia](#licencia)\n-   [Autor](#autor)\n\n## Descripción\n\nEste proyecto realizará la maquetación del siguiente reto en **HTML**, **CSS** y **JavaScript** considerando los siguientes requerimientos:\n\n### Para mobile\n\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/mobile-design-light.jpg?raw=true)\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/mobile-design-dark.jpg?raw=true)\n\n### Para desktop\n\n![Design preview for the Room homepage coding challenge - desktop](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/desktop-preview.jpg?raw=true)\n\n### El reto\n\nEl reto consiste en construir esta página inicial y que se parezca lo más posible al diseño.\n\nLos usuarios deberían poder:\n\n-   Ver el diseño óptimo para el sitio según el tamaño de pantalla de su dispositivo (Mobile First es requerido)\n-   Ver el efecto hover para todos los elementos interactivos de la página\n-   Cambiar el tema de color de su preferencia\n\nTambién se utilizó el archivo de `style-guide.md`, que contiene la información necesaria, de la paleta de colores y fuentes.\n\n### Créditos por el diseño y reto\n\nEste reto pertenece a la lista de retos de [Frontend Mentor](https://www.frontendmentor.io/dashboard). Para más información puede visitar [este enlace](https://www.frontendmentor.io/challenges/social-media-dashboard-with-theme-switcher-6oY8ozp_H).\n\n## Construcción del proyecto\n\nSe construyó utilizando la metodología `mobile first` para dispositivos de 375px, 1024px y 1440px. Asimismo, para los estilos se hace el uso de la metodología `BEM`. También se utiliza `JavaScript` Vanilla para la `manipulación del DOM` haciendo funcional el theme switcher para cambiar el color del tema de acuerdo con su preferencia.\n\nA continuación se mostrará algunos detalles y buenas prácticas:\n\n### Estructura HTML\n\n_Carga independiente de las hojas de estilos._\n\n```\n <link rel=\"stylesheet\" href=\"./styles/styles.css\">\n <link rel=\"stylesheet\" href=\"./styles/desktop1024.css\" media=\"screen and (min-width: 1024px)\">\n <link rel=\"stylesheet\" href=\"./styles/desktop1440.css\" media=\"screen and (min-width: 1440px)\">\n```\n\n_Utilización adecuada de etiquetas para mejorar la accesibilidad._\n\n```\n<article>\n            <h2 class=\"header__h2 light\">\n                Social Media Dashboard\n            </h2>\n            <article class=\"header__article\">\n                <small class=\"header__small light\">\n                Total Followers: 23,004\n                </small>\n                <div class=\"header__div light\">\n                    <p>\n                        Dark Mode\n                    </p>\n                    <label class=\"switch\">\n                  <input id=\"switch\" type=\"checkbox\">\n                  <span class=\"slider light round\"></span>\n                </label>\n                </div>\n            </article>\n        </article>\n```\n\n### Estilos en CSS\n\n_Uso de variables_\n\n```\n:root {\n    font-family: 'Inter', sans-serif;\n    --scroll-gap: 1.5rem;\n    /* Primary */\n    --LimeGreen: hsl(163, 72%, 41%);\n    --BrightRed: hsl(356, 69%, 56%);\n    --Facebook: hsl(208, 92%, 53%);\n    --Twitter: hsl(203, 89%, 53%);\n    --Instagram: linear-gradient(to right, hsl(37, 97%, 70%), hsl(329, 70%, 58%));\n    --YouTube: hsl(348, 97%, 39%);\n    /* #### Light Theme */\n    --White-BG: hsl(0, 0%, 100%);\n    --VeryPaleBlue-TopBGPattern: hsl(225, 100%, 98%);\n    --LightGrayishBlue-CardBG: hsl(227, 47%, 96%);\n    --DarkGrayishBlue-Text: hsl(228, 12%, 44%);\n    --VeryDarkBlue-Text: hsl(230, 17%, 14%);\n    /* #### Light Theme */\n    --Toggle: hsl(230, 22%, 74%);\n    /* #### Dark Theme */\n    --VeryDarkBlue-BG: hsl(230, 17%, 14%);\n    --VeryDarkBlue-Top-BG-Pattern: hsl(232, 19%, 15%);\n    --DarkDesaturatedBlue-CardBG: hsl(228, 28%, 20%);\n    --DesaturatedBlue-Text: hsl(228, 34%, 66%);\n    --White-Text: hsl(0, 0%, 100%);\n    /* #### Dark Theme */\n    --Toggle-dark: linear-gradient(to right, hsl(210, 78%, 56%), hsl(146, 68%, 55%));\n}\n```\n\n_Construcción del slider_\n\n```\n/* The switch - the box around the slider */\n\n.switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 28px;\n}\n\n\n/* Hide default HTML checkbox */\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n\n/* The slider */\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--Toggle);\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider.round.dark {\n    background-image: var(--Toggle-dark);\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 23px;\n    width: 29px;\n    left: 2px;\n    bottom: 2px;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider.dark:before {\n    background-color: var(--VeryDarkBlue-BG);\n}\n\ninput:checked+.slider {\n    background-color: #2196F3;\n}\n\ninput:focus+.slider {\n    box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked+.slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n}\n\n\n/* Rounded sliders */\n\n.slider.round {\n    border-radius: 34px;\n}\n\n.slider.round:before {\n    border-radius: 50%;\n}\n\n.parent {\n    padding: var(--scroll-gap);\n    /* height: 40vh; */\n    overflow: auto;\n    scroll-snap-type: mandatory;\n}\n\n.child {\n    /* height: calc(50vh - 3 * var(--scroll-gap)); */\n    /* scroll-snap-align: center; */\n    padding-top: 0.3rem;\n    display: grid;\n    border-radius: 7px;\n}\n\n.child:not(:last-child) {\n    margin-bottom: var(--scroll-gap);\n}\n\n.child .container {\n    background-color: var(--LightGrayishBlue-CardBG);\n    padding: 0;\n    width: 100%;\n    border-bottom-left-radius: 7px;\n    border-bottom-right-radius: 7px;\n}\n```\n\n_Uso de flexbox_\n\n```\n.container__footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1rem;\n}\n```\n\n### Manipulando el DOM con JavaScript\n\n_Uso de toggle para el menú_\n\n```\nlet switchButton = document.getElementById('switch')\nlet light = document.getElementsByClassName('light')\n\nfunction toggle() {\n    for (let i = 0; i < light.length; i++) {\n        light[i].classList.toggle('dark')\n    }\n}\n\nswitchButton.addEventListener('click', toggle)\n```\n\n## Licencia\n\n> Este proyecto esta bajo la licencia de MIT.\n\n## Autor\n\nMade with 💜 by [ArturoMauricioDev](https://arturomauricio.bio.link/)\n"},{"__metadata":{"id":"content/pages/portfolio/project-5.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/project-5.md","relProjectPath":"content/pages/portfolio/project-5.md","modelType":"page","modelName":"project","modelLabel":"Project","urlPath":"/portfolio/project-5"},"title":"Todo App in React","subtitle":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage.","date":"2021-09-22","thumb_image":"images/17.jpg","thumb_image_alt":"A Todo App in React image","image":"images/17.jpg","image_alt":"A Todo App in React image","seo":{"title":"Todo App in React","description":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Todo App in React","keyName":"property"},{"name":"og:description","value":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage.","keyName":"property"},{"name":"og:image","value":"images/17.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Todo App in React"},{"name":"twitter:description","value":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage."},{"name":"twitter:image","value":"images/17.jpg","relativeUrl":true}]},"layout":"project","markdown_content":"\n## Tabla de Contenidos\n\n-   [Demo](#demo)\n-   [Construcción del proyecto](#construcción-del-proyecto)\n    -   [Composición de componentes](#composición-de-componentes)\n    -   [Preprocesador SASS](#preprocesador-sass)\n    -   [Manejo del estado](#manejo-del-estado)\n-   [Licencia](#licencia)\n-   [Autor](#autor)\n\n## Demo\n\nEl proyecto esta disponible en:\n\n-   [App.](https://arturomauriciodev.github.io/todo-app-react-render/)\n-   [GitHub Repo.](https://github.com/ArturoMauricioDev/todo-app-react-render)\n\nEn la imagen se puede observar la pantalla de inicio, donde se pueden agregar las tareas a realizar.\n\n![Inicio de la aplicacion, agregue una tarea a realizar](https://i66.servimg.com/u/f66/20/43/92/62/localh18.png)\n\nSe despliega un modal, en el cual se escribe la tarea a realizar y se le da en añadir.\n\n![Escibe un nuevo TODO y has clic en añadir](https://i66.servimg.com/u/f66/20/43/92/62/localh19.png)\n\nLas tareas se agregan cronológicamente, también se puede indicar que ya fueron completadas mostrando el total de ellas en la parte superior. Del mismo modo se las pueden eliminar para que desaparezcan de la lista. Asimismo, es bueno mencionar que todos los datos son guardados en el local storage de tal modo que si cerramos el navegador los datos persisten para la próxima vez que se abra el navegador e ingrese a la aplicación.\n\n![Has completado 2 tareas de 4](https://i66.servimg.com/u/f66/20/43/92/62/localh20.png)\n\nSe pueden ingresar caracteres y/o palabras para filtrar las tareas a mostrar en la lista.\n\n![Ingreso la i en el cuadro de búsqueda de tareas](https://i66.servimg.com/u/f66/20/43/92/62/localh21.png)\n\nPor ejemplo, si ingreso \"im\" se desplegaría en la lista de tareas \"Implementar estados a mis componentes\".\n\n![Se ingresa im en el cuadro de búsqueda dando un resultado](https://i66.servimg.com/u/f66/20/43/92/62/localh22.png)\n\nEn caso de no encontrar coincidencias, se despliega un mensaje de \"No hay resultados para:\" el criterio de su búsqueda.\n\n![Se ingresa reac en el cuadro de búsqueda dando ningun reslutado](https://i66.servimg.com/u/f66/20/43/92/62/localh17.png)\n\n## Construcción del proyecto\n\nSe construyó utilizando la metodología `mobile first` para dispositivos de 375px. Asimismo, para los estilos se hace el uso de la metodología `BEM` en el preprocesador `SASS`. También se utiliza `React` para crear componentes utilizando `Atomic Design` y aprovechar los estados de los componentes junto a sus hooks.\n\nA continuación se mostrará algunos detalles y buenas prácticas:\n\n### Composición de componentes\n\n_Componentes de la aplicación_\n\n```\n<TodoHeader>\n    <TodoCounter totalTodos={totalTodos} completedTodos={completedTodos} />\n    <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n</TodoHeader>\n\n<TodoList\n    filteredText={filteredText}\n    totalTodos={totalTodos}\n    searchValue={searchValue}\n    onEmptyTodos={() => <EmptyTodos />}\n    onEmptySearchResults={(searchText) => (\n        <p className=\"empty-todos\">No hay resultados para: {searchText}</p>\n    )}\n    render={(todo) => (\n        <TodoItem\n        key={todo.text}\n        text={todo.text}\n        completed={todo.completed}\n        onComplete={() => toggleTodo(todo.text)}\n        onDelete={() => deleteTodo(todo.text)}\n        />\n    )}\n>\n</TodoList>\n\n{openModal && (\n    <Modal>\n        <TodoForm addTodo={addTodo} setOpenModal={setOpenModal} />\n    </Modal>\n)}\n<CreateTodoButton openModal={openModal} setOpenModal={setOpenModal} />\n\n<ChangeAlertWithStorageListener sincronize={setSincronizedItem} />\n```\n\n### Preprocesador SASS\n\n_Importación de estilos por componente_\n\n```\n//index.scss\n\n@import \"./components/styles/globales.scss\";\n@import \"./components/styles/TodoCounter\";\n@import \"./components/styles/CreateTodoButton\";\n@import \"./components/styles/TodoList\";\n@import \"./components/styles/TodoSearch\";\n@import \"./components/styles/TodoItem.scss\";\n@import \"./components/styles/Modal\";\n@import \"./components/styles/TodoForm\";\n@import \"./components/styles/ChangeAlert\";\n@import \"./components/styles/EmptyTodos\";\n\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  background: $bg-color;\n  font-family: $Fuente1;\n}\n\n#root {\n  margin: 0 24px;\n  min-height: 100vh;\n}\n```\n\n_Uso de variables_\n\n```\n$Fuente1: 'Nunito', sans-serif;\n$color-primario: #29A19C;\n$color-primario-disabled:#29a19c75;\n$color-secundario: #F9F9F9;\n$color-secundario-tranparenci:#f9f9f9ad;\n$color-variante:rgba(249, 249, 249, 0.2);\n$bg-color: #222831;\n$bg-component:#2C3440;\n```\n\n_Anidamiento en los estilos_\n\n```\n.ChangeAlert-bg{\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: #1e1e1f50;\n    z-index: 2;\n    & .alert-container{\n        height: 100%;\n        width: 80%;\n        margin: 0 auto;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        & p{\n            width: 100%;\n            height: 56px;\n            margin: 0;\n            background: #f75858;\n            color: $color-secundario;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-top-left-radius: 4px;\n            border-top-right-radius: 4px;\n            cursor: pointer;\n        }\n        & button{\n            width: 100%;\n            height: 48px;\n            margin: 0;\n            background: $color-secundario;\n            border-bottom-left-radius: 4px;\n            border-bottom-right-radius: 4px;\n            color: $bg-component;\n            font-family: $Fuente1;\n            font-size: 16px;\n            font-weight: 700;\n            border: 1px solid transparent;\n            transition: border 0.15;\n            &:hover{\n                border: $color-secundario-tranparenci;\n            }\n        }\n    }\n}\n```\n\n### Manejo del estado\n\n_Custom hook_\n\n```\n//useTodos.js\n\nimport { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nfunction useTodos() {\n\n    const [todos, saveTodos, setSincronizedItem] = useLocalStorage('TODOS_V1', []);\n\n    const [searchValue, setSearchValue] = useState('');\n    const [openModal, setOpenModal] = useState(false);\n\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    const filteredText = useMemo(() =>\n        todos.filter((todo) => {\n            return todo.text.toLowerCase().includes(searchValue.toLowerCase())\n        }), [todos, searchValue]\n    )\n\n    const toggleTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = !todos[todoIndex].completed;\n        saveTodos(newTodos);\n    }\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        }\n        );\n        saveTodos(newTodos);\n    }\n\n    const states={\n        totalTodos,\n        completedTodos,\n        searchValue,\n        filteredText,\n        openModal,\n    }\n    const stateUpdaters={\n        setSearchValue,\n        toggleTodo,\n        deleteTodo,\n        setOpenModal,\n        addTodo,\n        setSincronizedItem\n    }\n\n    return {states, stateUpdaters}\n}\n\nexport { useTodos }\n```\n\n_Persistencia de datos en el local storage utilizando useEffect y useReducer_\n\n```\n//useLocalStorage.js\n\nimport { useEffect, useReducer } from \"react\"\n\nfunction useLocalStorage(itemName, initialValue) {\n\n    const [state, dispatch] = useReducer(reducer, initialState({ initialValue }));\n    const {\n        sincronizedItem,\n        item\n    } = state\n\n    //Action Creators\n    const onSuccess = (parsedItem) => dispatch({\n        type: actionTypes.success,\n        payload: parsedItem\n    })\n    const onSave = (newItem) => dispatch({\n        type: actionTypes.save,\n        payload: newItem\n    })\n    const onSincronize = ()=> dispatch({\n        type: actionTypes.sincronize\n    })\n\n    useEffect(() => {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n        } else {\n            parsedItem = JSON.parse(localStorageItem);\n        }\n        onSuccess(parsedItem)\n    }, [sincronizedItem])\n\n    const saveItem = (newItem) => {\n        localStorage.setItem(itemName, JSON.stringify(newItem))\n        onSave(newItem)\n    }\n\n    const sincronizeItem = () => {\n        onSincronize()\n    }\n\n    return [\n        item,\n        saveItem,\n        sincronizeItem\n    ]\n}\n\nconst initialState = ({ initialValue }) => ({\n    sincronizedItem: true,\n    item: initialValue\n})\n\nconst actionTypes = {\n    success: 'SUCCESS',\n    save: 'SAVE',\n    sincronize: 'SINCRONIZE'\n}\n\nconst reducerObject = (state, payload) => ({\n    [actionTypes.success]: {\n        ...state,\n        sincronizedItem: true,\n        item: payload\n    },\n    [actionTypes.save]: {\n        ...state,\n        item: payload\n    },\n    [actionTypes.sincronize]: {\n        ...state,\n        sincronizedItem: false,\n    }\n})\n\nconst reducer = (state, action) => {\n    return reducerObject(state, action.payload)[action.type] || state\n}\n\nexport { useLocalStorage };\n```\n\n_Optimizando las búsquedas con useMemo_\n\n```\nconst filteredText = useMemo(() =>\n        todos.filter((todo) => {\n            return todo.text.toLowerCase().includes(searchValue.toLowerCase())\n        }), [todos, searchValue]\n    )\n```\n\n## Licencia\n\n> Este proyecto esta bajo la licencia de MIT.\n\n## Autor\n\nMade with 💜 by [ArturoMauricioDev](https://arturomauricio.bio.link/)\n"},{"__metadata":{"id":"content/pages/thank-you.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"thank-you.md","relProjectPath":"content/pages/thank-you.md","modelType":"page","modelName":"page","modelLabel":"Page","urlPath":"/thank-you"},"title":"Thank You!","image":"images/thank-you.jpg","image_alt":"Thank You Led Signage","layout":"page","markdown_content":"\nThank you for contacting us! We will get back in touch with you soon.\n\n**Have a great day!**"}],"posts":[{"__metadata":{"id":"content/pages/blog/Deberia-crear-mis-proyectos-React-con-Vite.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"blog/Deberia-crear-mis-proyectos-React-con-Vite.md","relProjectPath":"content/pages/blog/Deberia-crear-mis-proyectos-React-con-Vite.md","modelType":"page","modelName":"post","modelLabel":"Post","urlPath":"/blog/deberia-crear-mis-proyectos-react-con-vite"},"title":"¿Debería crear mis proyectos React con Vite?","subtitle":"Otra forma de crear proyectos en React","excerpt":"En este artículo aprenderás a crear proyectos de React con Vite.","date":"2021-06-21","thumb_image":"images/18.jpg","thumb_image_alt":"React - Vite","image":"images/14.png","image_alt":"React - Vite","seo":{"title":"The function of design is letting design function","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"The function of design is letting design function","keyName":"property"},{"name":"og:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore","keyName":"property"},{"name":"og:image","value":"images/13.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"The function of design is letting design function"},{"name":"twitter:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore"},{"name":"twitter:image","value":"images/13.jpg","relativeUrl":true}]},"layout":"post","img1":{"data":"images/13jpg"},"markdown_content":"\nProbablemente realizaste muchos proyectos con React, muchos de ellos los creaste utilizando create-react-app. Es normal, esta manera de crear tus proyectos es una práctica muy usual entre los desarrolladores. Pero te preguntaste ¿si hay otras formas de crear proyectos? Por su puesto que sí, hay varias y una de ellas es utilizando Vite.\n\n## Tabla de Contenidos\n\n-   [¿Por qué deberías usar Vite?](#¿por-qué-deberías-usar-vite)\n-   [Vamos a la acción](#vamos-a-la-acción)\n-   [Resolviendo problemas de versión](#resolviendo-problemas-de-versión)\n\n## ¿Por qué deberías usar Vite?\n\nSi bien con el tiempo, hemos visto herramientas como Webpack, Rollup y Parcel , que mejoraron enormemente la experiencia de desarrollo para los desarrolladores frontend. Hoy en día no es raro que los proyectos a gran escala contengan miles de módulos. Estamos empezando a encontrar un cuello de botella en el rendimiento de las herramientas basadas en JavaScript: a menudo puede llevar una espera excesivamente larga (¡algunas veces hasta minutos!) Para activar un servidor de desarrollo, e incluso con HMR, las ediciones de archivos pueden tardar un par de segundos en reflejarse en el navegador. El ciclo de retroalimentación lento puede afectar en gran medida la productividad y la felicidad de los desarrolladores.\n\nVite tiene como objetivo abordar estos problemas aprovechando los nuevos avances en el ecosistema: la disponibilidad de módulos ES nativos en el navegador y el surgimiento de herramientas JavaScript escritas en lenguajes de compilación a nativos.\n\nY ¿De dónde viene toda esta iniciativa para optimizar y resolver estos problemas? Pues del creador de Vue Js, Evan You. Para todos aquellos que no conocen la trayectoria de Evan es bueno mencionar que trabajo para Meteor Development Group y posteriormente paso un par de años en Google Creative Lab donde también formo parte de los inicios de Angular. Fue allí, en Mountain View que decidió ser un rebelde e ir en contra corriente para crear su propia librería de JavaScript, en donde las cosas se mantengan simples y el rendimiento sea el mejor. Es así como nació Vue Js, por eso no me sorprende en nada los objetivos propuestos por Vite Js. También es obvio que existe una coincidencia, ambos proyectos son nombrados con palabras en francés.\n\n## Vamos a la acción.\n\nEvan en su cuenta de Twitter nos indica las diferentes maneras de como podemos iniciar un proyecto con Vite.\n\n![Evan Tweet](https://i49.servimg.com/u/f49/19/27/49/47/1510.png)\n\nAmbas nos ayudarían a lograr nuestro objetivo, pero esta vez yo utilizare:\n\n```\nnpm init vite@latest\n```\n\nEjecutamos el comando y a continuación nos pregunta el nombre del proyecto. Esta vez lo nombraré como vite-project.\n\n![npm init vite@latest](https://i49.servimg.com/u/f49/19/27/49/47/16268910.png)\n\nLuego debemos indicar el framework a utilizar, elegimos react.\n\n![Elegimos React](https://i49.servimg.com/u/f49/19/27/49/47/16268911.png)\n\n![Elegimos React](https://i49.servimg.com/u/f49/19/27/49/47/16268912.png)\n\n¡Y eso es todo! Ya creamos nuestro primer proyecto con Vite en cuestión de segundos. Para finalizar nos indica 3 sencillos pasos para hacerlo correr.\n\n![Debes ejecutar lo siguiente](https://i49.servimg.com/u/f49/19/27/49/47/16268913.png)\n\nAhora es cuando a más de uno les habrá saltado un error y comenzaran a sentirse frustrados. Esperen un segundo respiren profundo que acá les traigo la solución. El error más común y por el cual no llega a funcionar es porque la versión de NodeJs no es la adecuada. Para que ViteJs comience a andar necesitamos la versión 12 o posterior. Vamos a solucionarlo.\n\n## Resolviendo problemas de versión.\n\nLa manera más sencilla y eficiente de resolver los problemas de versión de NodeJs es utilizando una maravillosa herramienta de gestión de versiones para NodeJs llamada nvm. Para instalarla ejecutamos el siguiente comando.\n\n```\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n```\n\nUna vez instalado, reinicia tu terminal y ya podemos ver las versiones de NodeJs que tenemos en nuestro sistema con nvm list.\n\n![nvm list](https://i49.servimg.com/u/f49/19/27/49/47/16268914.png)\n\nLuego procedemos a verificar que versiones están disponibles en los repositorios para realizar la instalación de la versión correcta para la tarea que deseamos realizar. Para ello utilizo el comando nvm ls-remote --lts. A continuación nos mostrará una larga lista con las versiones de NodeJs.\n\n![version list](https://i49.servimg.com/u/f49/19/27/49/47/16268915.png)\n\nUna vez identificada la versión que requerimos procedemos a instalar. Para esta tarea en específico instalamos la versión 12.2.\n\n![instalación](https://i49.servimg.com/u/f49/19/27/49/47/16268916.png)\n\nAhora verificamos con nvm list la versión de NodeJs con la cual está trabajando el sistema. También es bueno mencionar que con nvm podremos cambiar las diferentes versiones de NodeJs de acuerdo a la necesidad que tengamos, sin tener que instalar o desinstalar. Todas las versiones coexistirán, solo tendremos que activarlas o desactivarlas.\n\n![Se verifica la instalación](https://i49.servimg.com/u/f49/19/27/49/47/16268917.png)\n\n¡Ahora si a iniciar el proyecto!\n\n![npm install](https://i49.servimg.com/u/f49/19/27/49/47/16268918.png)\n\n![npm run dev](https://i49.servimg.com/u/f49/19/27/49/47/16268919.png)\n\nLo logramos ViteJs ya está funcionando.\n\n![Está funcionando, se muestra la url](https://i49.servimg.com/u/f49/19/27/49/47/16268920.png)\n\n¡Felicidades! Acabas de crear tu primer proyecto con ViteJs.\n\n![Proyecto React con Vite funcionando en el navegador](https://i49.servimg.com/u/f49/19/27/49/47/16268921.png)\n"},{"__metadata":{"id":"content/pages/blog/atomic-design.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"blog/atomic-design.md","relProjectPath":"content/pages/blog/atomic-design.md","modelType":"page","modelName":"post","modelLabel":"Post","urlPath":"/blog/atomic-design"},"title":"¿Cómo utilizo atomic design en mis proyectos ReactJs?","subtitle":"Atomic Design es una metodología concebida por Brad Frost, que pretende acabar con las inconsistencias y optimizar el diseño y desarrollo al máximo en aplicaciones modernas, de ese modo podemos aplicar la composición de componentes en ReactJs.","excerpt":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros.","date":"2022-09-09","thumb_image":"images/20.jpg","thumb_image_alt":"atomic design image","image":"images/20.jpg","image_alt":"atomic design image","seo":{"title":"¿Cómo utilizo atomic design en mis proyectos ReactJs?","description":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros.","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"¿Cómo utilizo atomic design en mis proyectos ReactJs?","keyName":"property"},{"name":"og:description","value":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros.","keyName":"property"},{"name":"og:image","value":"images/20.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"¿Cómo utilizo atomic design en mis proyectos ReactJs?"},{"name":"twitter:description","value":"Acá te muestro como utilizar atomic design en todos tus proyectos futuros."},{"name":"twitter:image","value":"images/20.jpg","relativeUrl":true}]},"layout":"post","img1":{"data":"images/20.jpg"},"markdown_content":"\nAtomic Design nace a partir de la inquietud de Brad Frost de aplicar sus clases de química de la secundaria a otros campos e industrias. Su profesor, el Sr. Rae, tenía la reputación de tener una de clases más difíciles en su escuela debido a que sus estudiantes tenían que equilibrar cientos de ecuaciones químicas. Recordemos un poco sobre química de secundaria, sabemos que las reacciones químicas están representadas por ecuaciones químicas que muestran como los átomos se combinan para formar moléculas. ¡Voilà! ¡Es así como empezó todo!\n\nEl mundo es increíblemente complejo, es natural que este principio sobre las reacciones químicas sea aplicado a otros campos abordando problemas similares, por ejemplo el diseño de aplicaciones para distintos dispositivos como teléfonos móviles, tabletas, smart TVs, consolas de juegos, lentes de VR y AR, etc. este proceso es realmente complejo y se requieren procesos que faciliten este desarrollo y eviten los errores. Atomic Design utiliza este principio de química de secundaria, y viene a dar en el clavo, uniendo disciplinas como el diseño de aplicaciones y el desarrollo bajo un mismo concepto, el de _`diseñar por componentes`_.\n\n## Tabla de Contenidos\n\n-   [Composición de componentes](#composición-de-componentes)\n-   [Los elementos de Atomic Design](#los-elementos-de-atomic-design)\n    -   [Átomos](#átomos)\n    -   [Moléculas](#moléculas)\n    -   [Organismos](#organismos)\n    -   [Plantillas](#plantillas)\n    -   [Páginas](#páginas)\n-   [Llevando todo a código](#llevando-todo-a-código)\n    -   [ProductRow](#productrow)\n    -   [ProductCatergoryRow](#productcatergoryrow)\n    -   [ProductTable](#producttable)\n    -   [SearchBar](#searchbar)\n    -   [FilterableProductTable](#filterableproducttable)\n\n## Composición de componentes\n\nLa composición de componentes es un principio fundamental en ReactJS, te ayuda a diseñar tus componentes de modo que sean muy flexibles, y que se integren entre sí para cambiar un resultado visual o su funcionamiento dentro de la aplicación sin dificultades. Se crean componentes de fácil acoplamiento, es así como son fáciles de reutilizar, mover e incluso eliminar.\n\n![Piezas de lego](https://i49.servimg.com/u/f49/19/27/49/47/blokoc10.jpg)\n\nSon como piezas de lego cada unidad con su forma, color y estructura propia, que combinándolos de una manera se podría construir un edificio y si los combinamos de otra manera podríamos construir un tractor o lo que nuestra propia creatividad e imaginación nos permita hacerlo. A esto le llamamos composición de componentes.\n\n![Construyendo con piezas de lego](https://i49.servimg.com/u/f49/19/27/49/47/imagen10.jpg)\n\nPara realizar la composición de componentes utilizando la metodología Atomic Design debemos comenzar desde los elementos más pequeños de una aplicación, integrándolos uno a uno para formar componentes más grandes que irán convirtiéndose eventualmente en plantillas y páginas. Pero, ¿cómo vamos estructurándolos uno a uno? Lo haremos con:\n\n> El principio de responsabilidad única.\n\n🤯 ¿En qué consiste este principio? Para dar una buena explicación acerca de este principio debemos conocer y seguir las siguientes reglas.\n\n-   **Los átomos** son los componentes básicos, cada átomo como cada elemento químico tiene propiedades distintas a cualquier otro átomo y no se lo puede descomponer más sin perder su significado. Son la unidad funcional más pequeña.\n\n-   **Las moléculas** son grupos de dos o más átomos que se mantienen unidos. Esta combinación entre átomos adquiere por sí misma sus propias propiedades únicas y funcionan en conjunto brindando una única funcionalidad.\n\n-   **Los organismos** son conjuntos de moléculas que funcionan juntas como una unidad brindando una única funcionalidad, estas estructuras son relativamente complejas, varían desde organismos unicelulares hasta organismos sofisticados, y todas ellas tienen un límite de responsabilidad.\n\nEn esta descripción, se simplifican muchas cosas de la composición química, pero en sí nos da la esencia básica para la composición de componentes, utilizando el principio de responsabilidad única en nuestras aplicaciones. A continuación precisemos aún más estos 5 elementos que componen esta metodología.\n\n## Los elementos de Atomic Design.\n\n### Átomos\n\nSon componentes básicos, estos no se los puede desglosar más sin dejar de ser funcionales. Cada átomo tienen sus propias propiedades únicas. Pueden ser: botones, avatares, inputs de formularios, párrafos, etc.\n\n![Identificando átomos en una vista](https://i49.servimg.com/u/f49/19/27/49/47/imagen10.png)\n\n### Moléculas\n\nSon grupos de átomos unidos entre sí que adquieren nuevas propiedades distintas, funcionan juntos como una unidad. Por ejemplo:\n\nUn input de búsqueda y un botón pueden unirse para crear una molécula que forma parte de un formulario de búsqueda. Cuando se combinan estos átomos llegan a tener un propósito. Esta molécula llega a ser un componente simple, portátil y reutilizable que se puede colocar en cualquier lugar donde se necesite realizar búsquedas.\n\n![Identificando moléculas en una vista](https://i49.servimg.com/u/f49/19/27/49/47/imagen11.png)\n\nLa creación de componentes simples ayuda a los diseñadores y desarrolladores a emplear el principio de responsabilidad única. Dicho en otras palabras \"hacer una cosa y hacerlo bien\"\n\n### Organismos\n\nSon componentes relativamente complejos, compuestos por grupos de moléculas y/o átomos y/u otros organismos. Estos organismos forman secciones distintas. Por ejemplo, cuando unimos el logo, los iconos, texto y una molécula de búsqueda para crear una navegación en la aplicación. La navegación en sí es una sección independiente con sus propias propiedades, en mobile se puede ver con su burguer menu de una manera diferente a la versión desktop donde no se muestra el burguer menu, ya que se despliega sus opciones directamente.\n\n![Identificando organismos en una vista](https://i49.servimg.com/u/f49/19/27/49/47/imagen12.png)\n\n### Plantillas\n\nEn esta instancia, la plantilla contiene los componentes creados en las anteriores instancias y articulan la estructura de la app. Se compone principalmente de grupos de organismos unidos para formar una vista de la aplicación. Aquí se empieza a ver ya el diseño en acción. Con las plantillas los clientes comienzan a ver el diseño final de la aplicación.\n\nLas plantillas definen el esqueleto de la aplicación, muestran componentes clave en acción, demuestra su contenido con respecto a tamaños, espacios que ocupa y la longitud de los textos y caracteres.\n\n### Páginas\n\nLas páginas llegan a ser instancias de las plantillas, dicho de otra manera, las páginas son plantillas con contenido específico y real que muestran como se ve una interfaz de la aplicación. Los usuarios verán e interactuarán obteniendo una experiencia de su uso y utilizando las funcionalidades que la aplicación les brinda.\n\nEn esta etapa se realiza una revisión de que todo se llegue a ver bien y de que todo funcione correctamente. En caso de que algo no se vea coherente y no brinde la función esperada, se debe retroceder y modificar las moléculas, organismos y plantillas para resolver las necesidades de los usuarios.\n\n## Llevando todo a código\n\nA continuación, vamos a dividir una interfaz de usuario en una jerarquía de componentes utilizando el principio de responsabilidad única. Y lo llevaremos a código utilizando ReactJS.\n\n![Dividiendo la vista de una app de acuerdo con atomic design](https://i49.servimg.com/u/f49/19/27/49/47/imagen13.png)\n\nComo se observa tenemos una aplicación que muestra productos de deportes y productos electrónicos con sus respectivos precios. Estos productos están divididos por sus categorías. También, se cuenta con una barra de búsquedas la cual filtra el producto deseado de las listas de productos, asimismo se considera solo mostrar los productos que tienen stock.\n\nAhora comenzaremos a identificar los diferentes componentes de acuerdo con la metodología atomic design.\n\n1. **FilterableProductTable** (café): Contiene la totalidad de componentes.\n\n2. **SearchBar** (azul): Componente para realizar búsquedas y filtrado, su responsabilidad es mostrar los productos de acuerdo con los parámetros que el usuario vaya ingresando.\n\n3. **ProductTable** (verde): Muestra la colección de productos de todas las categorías según el nombre y el precio.\n\n4. **ProductCategoryRow** (turquesa): Muestra los productos de una categoría en específico.\n\n5. **ProductRow** (rojo): Muestra un producto, su nombre y precio en una fila.\n\n### ProductRow\n\nDe esta manera quedaría el código del componente ProductRow.\n\n![Componente ProductRow](https://i49.servimg.com/u/f49/19/27/49/47/carbon10.png)\n\n### ProductCatergoryRow\n\nEste componente recibe el título que mostrará en su categoría y el arreglo de productos que pertenecen a dicha categoría, con esa información puede construirse por sí mismo. También crea componentes ProductRow por cada producto reutilizando código.\n\n![Componente ProductCategoryRow](https://i49.servimg.com/u/f49/19/27/49/47/carbon11.png)\n\n### ProductTable\n\nSe construye este componente sobre la base de los anteriores componentes, para el ejemplo se utiliza dos categorías, por lo cual se le envía el título y el arreglo de productos correspondiente.\n\n![Componente ProductTable](https://i49.servimg.com/u/f49/19/27/49/47/carbon12.png)\n\n### SearchBar\n\nEste componente quedaría de la siguiente manera.\n\n![Componente SearchBar](https://i49.servimg.com/u/f49/19/27/49/47/carbon13.png)\n\n### FilterableProductTable\n\nFinalmente, todos los componentes anteriormente construidos son utilizados en este componente. También es bueno resaltar que cada uno de ellos es independiente en sus propiedades y estados. Para conseguir la funcionalidad esperada, los componentes interactúan unos con otros utilizando useContext.\n\n![Componente FilterableProductTable](https://i49.servimg.com/u/f49/19/27/49/47/carbon14.png)\n\nPara obtener toda la información correspondiente a este ejemplo puedes visitar el siguiente [GitHub](https://github.com/ArturoMauricioDev/product-table).\n\nAhora es tu turno, ya puedes construir tu siguiente aplicación utilizando la metodología Atomic Design.\n"},{"__metadata":{"id":"content/pages/blog/desplegando-una-aplicación-React-en-Github-Pages.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"blog/desplegando-una-aplicación-React-en-Github-Pages.md","relProjectPath":"content/pages/blog/desplegando-una-aplicación-React-en-Github-Pages.md","modelType":"page","modelName":"post","modelLabel":"Post","urlPath":"/blog/desplegando-una-aplicación-react-en-github-pages"},"title":"Desplegando una aplicación React en GitHub Pages","subtitle":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","excerpt":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","date":"2022-08-14","thumb_image":"images/19.jpg","thumb_image_alt":"Aplicación React en GitHub Pages.","image":"images/19.jpg","image_alt":"Aplicación React en GitHub Pages.","seo":{"title":"Desplegando una aplicación React en GitHub Pages","description":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"Desplegando una aplicación React en GitHub Pages","keyName":"property"},{"name":"og:description","value":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages.","keyName":"property"},{"name":"og:image","value":"images/19.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Desplegando una aplicación React en GitHub Pages"},{"name":"twitter:description","value":"En este tutorial te enseño a desplegar una aplicación de React en GitHub Pages."},{"name":"twitter:image","value":"images/19.jpg","relativeUrl":true}]},"layout":"post","markdown_content":"\n## Tabla de Contenidos\n\n-   [Prerrequisitos](#prerrequisitos)\n-   [A la acción](#a-la-acción)\n-   [Ingresa a tu app](#ingresa-a-tu-app)\n\n## Prerrequisitos\n\nPara poder desplegar tu aplicación React en GitHub Pages necesitas tener instalado lo siguiente:\n\n1. Node y npm\n\n```\n$ node --version\nv16.13.2\n```\n\n```\n$ npm --version\n8.1.2\n```\n\nSi deseas instalar o manejar las versiones de NodeJs en tu sistema, puedes revisar este otro [artículo.](https://arturomauriciodev.netlify.app/blog/deberia-crear-mis-proyectos-react-con-vite/#resolviendo-problemas-de-versión)\n\n2. Git\n\n```\n$ sudo apt install git\n```\n\n3. También debes tener una cuenta de [GitHub.](https://github.com/)\n\n## A la acción\n\n1. Crea un repositorio en GitHub.\n\n    - Asegúrate que la visibilidad de tu repositorio sea **público**.\n\n2. Crea tu aplicación React.\n   Para ello puedes utilizar el siguiente comando:\n\n```\n$ npx create-react-app my-app\n```\n\nIngresa al directorio creado.\n\n```\n$ cd my-app\n```\n\nEjecuta la aplicación.\n\n```\n$ npm run start\n```\n\nVerifica en el navegador que la aplicación esté ejecutándose.\n\n3. Instala el paquete **_gh-pages_**, para ello utiliza el siguiente comando.\n\n```\nnpm install gh-pages --save-dev\n```\n\nPuedes verificar la instalación de **_gh-pages_** en el archivo **_package.json_**.\n\n4. Agrega la propiedad **_homepage_** en el archivo **_package.json_**. Para ello puedes utilizar [Visual Studio Code.](https://code.visualstudio.com/)\n\n_La propiedad homepage tiene el siguiente formato._\n\n```\nhttps://{username}.github.io\n```\n\nDebes reemplazar username por el nombre de usuario que tienes en GitHub.\n\nTu archivo **_package.json_**, quedaría de la siguiente manera.\n\n```\n\"name\": \"my-app\",\n  \"version\": \"0.1.0\",\n  \"homepage\": \"https://ArturoMauricioDev.github.io/my-app\",\n  \"private\": true,\n```\n\n5. Agrega los **_scripts_** de predeploy y deploy en tu **_package.json_**, tu archivo quedaría de esta manera.\n\n```\n \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\",\n    \"predeploy\": \"npm run build\",\n    \"deploy\": \"gh-pages -d build\"\n  }\n```\n\n6. Conecta tu repositorio local con el remoto (GitHub).\n\n```\n$ git remote add origin https://github.com/{username}/{repo-name}.git\n```\n\n7. Finalmente, despliega tu aplicación React en GitHub Pages.\n\n```\n$ npm run deploy -- -m \"Despliegue de la app en GitHub Pages\"\n```\n\nGitHub Pages automáticamente realizará un commit en la rama _gh-pages_ del repositorio remoto, de esa manera quedará todo listo en cuanto al despliegue. 🚀\n\n## Ingresa a tu app\n\nPara obtener la url de tu app debes ingresar a **_Settings_** de tu repositorio y a la sección **_Pages_**, ahí encontrarás una url similar a https://gitname.github.io/my-app.\n"}],"projects":[{"__metadata":{"id":"content/pages/portfolio/project-1.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/project-1.md","relProjectPath":"content/pages/portfolio/project-1.md","modelType":"page","modelName":"project","modelLabel":"Project","urlPath":"/portfolio/project-1"},"title":"Room home page","subtitle":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","date":"2020-09-28","thumb_image":"images/15_thumb.jpg","thumb_image_alt":"Room home page image","image":"images/15_thumb.jpg","image_alt":"Room home page image","seo":{"title":"Room home page","description":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Room home page","keyName":"property"},{"name":"og:description","value":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","keyName":"property"},{"name":"og:image","value":"images/15_thumb.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Room home page"},{"name":"twitter:description","value":"Es un proyecto que tiene como objetivo aplicar una maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor."},{"name":"twitter:image","value":"images/15_thumb.jpg","relativeUrl":true}]},"layout":"project","markdown_content":"\n## Demo\n\nEl proyecto esta disponible en [https://room.js.org/](https://room.js.org/). Asimismo este es su [repositorio](https://github.com/ArturoMauricioDev/roomHomepage).\n\n## Tabla de Contenidos\n\n-   [Descripción](#descripción)\n    -   [Mobile](#para-mobile)\n    -   [Desktop](#para-desktop)\n    -   [El reto](#el-reto)\n    -   [Créditos por el diseño y reto](#créditos-por-el-diseño-y-reto)\n-   [Construcción del proyecto](#construcción-del-proyecto)\n    -   [Estructura HTML](#estructura-html)\n    -   [Estilos en CSS](#estilos-en-css)\n    -   [Manipulando el DOM con JavaScript](#manipulando-el-dom-con-javascript)\n-   [Licencia](#licencia)\n-   [Bonus](#bonus)\n-   [Autor](#autor)\n\n<!-- toc -->\n\n## Descripción\n\nEste proyecto realizará la maquetación del siguiente reto en `HTML`, `CSS` y `JavaScript` considerando los siguientes requerimientos:\n\n### Para mobile\n\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/roomHomepage/raw/master/design/mobile-design.jpg)\n\n### Para desktop\n\n![Design preview for the Room homepage coding challenge - desktop](https://github.com/ArturoMauricioDev/roomHomepage/raw/master/design/desktop-preview.jpg)\n\n### El reto\n\nEl reto consiste en construir esta página inicial de una e-commerce logrando que se parezca lo más posible al diseño.\n\nLos usuarios deberían poder:\n\n-   Ver el diseño óptimo para el sitio según el tamaño de pantalla de su dispositivo (`Mobile First` es requerido)\n-   Ver el estado hover para todos los elementos interactivos en la página.\n-   Navegar con el slider.\n\nTambién se utilizó el archivo de `style-guide.md`, que contiene la información necesaria, de la paleta de colores y fuentes.\n\n### Créditos por el diseño y reto\n\nEste reto pertenece a la lista de retos de [Frontend Mentor](https://www.frontendmentor.io/dashboard). Para más información puede visitar [este enlace](https://www.frontendmentor.io/challenges/room-homepage-BtdBY_ENq).\n\n## Construcción del proyecto\n\nSe construyó utilizando la metodología `mobile first` para dispositivos de 375px, 1024px y 1440px. Asimismo, para los estilos se hace el uso de la metodología `BEM`. También se utiliza `JavaScript` Vanilla para la `manipulación del DOM` en el menú de la aplicación mobile y en el slider tanto en mobile como en desktop.\n\nA continuación se mostrará algunos detalles y buenas prácticas:\n\n### Estructura HTML\n\n_Carga independiente de las hojas de estilos._\n\n```\n<link rel=\"stylesheet\" href=\"./styles/style.css\">\n<link rel=\"stylesheet\" href=\"./styles/desktop1024.css\" media=\"screen and (min-width: 1024px)\">\n<link rel=\"stylesheet\" href=\"./styles/desktop1440.css\" media=\"screen and (min-width: 1440px)\">\n```\n\n_Optimización de carga de imágenes según el dispositivo._\n\n```\n<picture>\n  <source media=\"(min-width:1024px)\" srcset=\"./images/desktop-image-hero-1.jpg\">\n  <img src=\"./images/mobile-image-hero-1.jpg\" alt=\"\">\n</picture>\n```\n\n### Estilos en CSS\n\n_Uso de variables_\n\n```\n:root{\n    --DarkGray: hsl(0, 0%, 63%);\n    --Black: hsl(0, 0%, 0%);\n    --White: hsl(0, 0%, 100%);\n    --VeryDarkGray: hsl(0, 0%, 27%);\n    font-family: 'Spartan', sans-serif;\n}\n```\n\n_Uso de un toggle para el menú mobile_\n\n```\n.menu.toggle{\n    display: none;\n}\n\n.menu{\n    position: absolute;\n    background: var(--White);\n    display: flex;\n    justify-content: space-between;\n    height: 80px;\n    width: 100%;\n    transition: .3s;\n}\n```\n\n_Uso de flexbox_\n\n```\n.topContainer{\n    display: flex;\n    position: absolute;\n    width: 50%;\n}\n```\n\n### Manipulando el DOM con JavaScript\n\n_Uso de toggle para el menú_\n\n```\nlet menu = document.getElementById('menu')\nlet burger = document.getElementById('burger')\nlet closeButton = document.getElementById('close')\n\nfunction toggleMenu(){\n    menu.classList.toggle('toggle')\n}\n\nburger.addEventListener('click', toggleMenu)\ncloseButton.addEventListener('click', toggleMenu)\n```\n\n## Licencia\n\n> Este proyecto esta bajo la licencia de MIT.\n\n## Bonus\n\nSe puede acceder al proyecto por medio del dominio [https://room.js.org/](https://room.js.org/). Para utilizarlo en este proyecto se realizó la integración del proyecto [https://js.org/](https://js.org/), para más información visita su [sitio.](https://js.org/)\n\n## Autor\n\nMade with 💜 by [ArturoMauricioDev](https://arturomauricio.bio.link/)\n"},{"__metadata":{"id":"content/pages/portfolio/project-4.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/project-4.md","relProjectPath":"content/pages/portfolio/project-4.md","modelType":"page","modelName":"project","modelLabel":"Project","urlPath":"/portfolio/project-4"},"title":"Social media dashboard with theme switcher","subtitle":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","date":"2020-10-05","thumb_image":"images/16_thumb.jpg","thumb_image_alt":"A Social media dashboard with theme switcher image","image":"images/16_thumb.jpg","image_alt":"A Social media dashboard with theme switcher image","seo":{"title":"Social media dashboard with theme switcher","description":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Social media dashboard with theme switcher","keyName":"property"},{"name":"og:description","value":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor.","keyName":"property"},{"name":"og:image","value":"images/16_thumb.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Social media dashboard with theme switcher"},{"name":"twitter:description","value":"Es un proyecto que tiene como objetivo aplicar la maquetación en HTML, CSS y JavaScript. El proyecto forma parte de la escuela de Desarrollo Web de Platzi utilizando el challenge de Frontend Mentor."},{"name":"twitter:image","value":"images/16_thumb.jpg","relativeUrl":true}]},"layout":"project","markdown_content":"\n## Demo\n\nEl proyecto esta disponible en [https://arturomauriciodev.github.io/socialMedia/](https://arturomauriciodev.github.io/socialMedia/).\n\n## Tabla de Contenidos\n\n-   [Descripción](#descripción)\n    -   [Mobile](#para-mobile)\n    -   [Desktop](#para-desktop)\n    -   [El reto](#el-reto)\n    -   [Créditos por el diseño y reto](#créditos-por-el-diseño-y-reto)\n-   [Construcción del proyecto](#construcción-del-proyecto)\n    -   [Estructura HTML](#estructura-html)\n    -   [Estilos en CSS](#estilos-en-css)\n    -   [Manipulando el DOM con JavaScript](#manipulando-el-dom-con-javascript)\n-   [Licencia](#licencia)\n-   [Autor](#autor)\n\n## Descripción\n\nEste proyecto realizará la maquetación del siguiente reto en **HTML**, **CSS** y **JavaScript** considerando los siguientes requerimientos:\n\n### Para mobile\n\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/mobile-design-light.jpg?raw=true)\n![Design preview for the Room homepage coding challenge - mobile](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/mobile-design-dark.jpg?raw=true)\n\n### Para desktop\n\n![Design preview for the Room homepage coding challenge - desktop](https://github.com/ArturoMauricioDev/socialMedia/blob/main/design/desktop-preview.jpg?raw=true)\n\n### El reto\n\nEl reto consiste en construir esta página inicial y que se parezca lo más posible al diseño.\n\nLos usuarios deberían poder:\n\n-   Ver el diseño óptimo para el sitio según el tamaño de pantalla de su dispositivo (Mobile First es requerido)\n-   Ver el efecto hover para todos los elementos interactivos de la página\n-   Cambiar el tema de color de su preferencia\n\nTambién se utilizó el archivo de `style-guide.md`, que contiene la información necesaria, de la paleta de colores y fuentes.\n\n### Créditos por el diseño y reto\n\nEste reto pertenece a la lista de retos de [Frontend Mentor](https://www.frontendmentor.io/dashboard). Para más información puede visitar [este enlace](https://www.frontendmentor.io/challenges/social-media-dashboard-with-theme-switcher-6oY8ozp_H).\n\n## Construcción del proyecto\n\nSe construyó utilizando la metodología `mobile first` para dispositivos de 375px, 1024px y 1440px. Asimismo, para los estilos se hace el uso de la metodología `BEM`. También se utiliza `JavaScript` Vanilla para la `manipulación del DOM` haciendo funcional el theme switcher para cambiar el color del tema de acuerdo con su preferencia.\n\nA continuación se mostrará algunos detalles y buenas prácticas:\n\n### Estructura HTML\n\n_Carga independiente de las hojas de estilos._\n\n```\n <link rel=\"stylesheet\" href=\"./styles/styles.css\">\n <link rel=\"stylesheet\" href=\"./styles/desktop1024.css\" media=\"screen and (min-width: 1024px)\">\n <link rel=\"stylesheet\" href=\"./styles/desktop1440.css\" media=\"screen and (min-width: 1440px)\">\n```\n\n_Utilización adecuada de etiquetas para mejorar la accesibilidad._\n\n```\n<article>\n            <h2 class=\"header__h2 light\">\n                Social Media Dashboard\n            </h2>\n            <article class=\"header__article\">\n                <small class=\"header__small light\">\n                Total Followers: 23,004\n                </small>\n                <div class=\"header__div light\">\n                    <p>\n                        Dark Mode\n                    </p>\n                    <label class=\"switch\">\n                  <input id=\"switch\" type=\"checkbox\">\n                  <span class=\"slider light round\"></span>\n                </label>\n                </div>\n            </article>\n        </article>\n```\n\n### Estilos en CSS\n\n_Uso de variables_\n\n```\n:root {\n    font-family: 'Inter', sans-serif;\n    --scroll-gap: 1.5rem;\n    /* Primary */\n    --LimeGreen: hsl(163, 72%, 41%);\n    --BrightRed: hsl(356, 69%, 56%);\n    --Facebook: hsl(208, 92%, 53%);\n    --Twitter: hsl(203, 89%, 53%);\n    --Instagram: linear-gradient(to right, hsl(37, 97%, 70%), hsl(329, 70%, 58%));\n    --YouTube: hsl(348, 97%, 39%);\n    /* #### Light Theme */\n    --White-BG: hsl(0, 0%, 100%);\n    --VeryPaleBlue-TopBGPattern: hsl(225, 100%, 98%);\n    --LightGrayishBlue-CardBG: hsl(227, 47%, 96%);\n    --DarkGrayishBlue-Text: hsl(228, 12%, 44%);\n    --VeryDarkBlue-Text: hsl(230, 17%, 14%);\n    /* #### Light Theme */\n    --Toggle: hsl(230, 22%, 74%);\n    /* #### Dark Theme */\n    --VeryDarkBlue-BG: hsl(230, 17%, 14%);\n    --VeryDarkBlue-Top-BG-Pattern: hsl(232, 19%, 15%);\n    --DarkDesaturatedBlue-CardBG: hsl(228, 28%, 20%);\n    --DesaturatedBlue-Text: hsl(228, 34%, 66%);\n    --White-Text: hsl(0, 0%, 100%);\n    /* #### Dark Theme */\n    --Toggle-dark: linear-gradient(to right, hsl(210, 78%, 56%), hsl(146, 68%, 55%));\n}\n```\n\n_Construcción del slider_\n\n```\n/* The switch - the box around the slider */\n\n.switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 28px;\n}\n\n\n/* Hide default HTML checkbox */\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n\n/* The slider */\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--Toggle);\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider.round.dark {\n    background-image: var(--Toggle-dark);\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 23px;\n    width: 29px;\n    left: 2px;\n    bottom: 2px;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n}\n\n.slider.dark:before {\n    background-color: var(--VeryDarkBlue-BG);\n}\n\ninput:checked+.slider {\n    background-color: #2196F3;\n}\n\ninput:focus+.slider {\n    box-shadow: 0 0 1px #2196F3;\n}\n\ninput:checked+.slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n}\n\n\n/* Rounded sliders */\n\n.slider.round {\n    border-radius: 34px;\n}\n\n.slider.round:before {\n    border-radius: 50%;\n}\n\n.parent {\n    padding: var(--scroll-gap);\n    /* height: 40vh; */\n    overflow: auto;\n    scroll-snap-type: mandatory;\n}\n\n.child {\n    /* height: calc(50vh - 3 * var(--scroll-gap)); */\n    /* scroll-snap-align: center; */\n    padding-top: 0.3rem;\n    display: grid;\n    border-radius: 7px;\n}\n\n.child:not(:last-child) {\n    margin-bottom: var(--scroll-gap);\n}\n\n.child .container {\n    background-color: var(--LightGrayishBlue-CardBG);\n    padding: 0;\n    width: 100%;\n    border-bottom-left-radius: 7px;\n    border-bottom-right-radius: 7px;\n}\n```\n\n_Uso de flexbox_\n\n```\n.container__footer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 1rem;\n}\n```\n\n### Manipulando el DOM con JavaScript\n\n_Uso de toggle para el menú_\n\n```\nlet switchButton = document.getElementById('switch')\nlet light = document.getElementsByClassName('light')\n\nfunction toggle() {\n    for (let i = 0; i < light.length; i++) {\n        light[i].classList.toggle('dark')\n    }\n}\n\nswitchButton.addEventListener('click', toggle)\n```\n\n## Licencia\n\n> Este proyecto esta bajo la licencia de MIT.\n\n## Autor\n\nMade with 💜 by [ArturoMauricioDev](https://arturomauricio.bio.link/)\n"},{"__metadata":{"id":"content/pages/portfolio/project-5.md","source":"sourcebit-source-filesystem","sourceName":"pages","sourcePath":"content/pages","relSourcePath":"portfolio/project-5.md","relProjectPath":"content/pages/portfolio/project-5.md","modelType":"page","modelName":"project","modelLabel":"Project","urlPath":"/portfolio/project-5"},"title":"Todo App in React","subtitle":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage.","date":"2021-09-22","thumb_image":"images/17.jpg","thumb_image_alt":"A Todo App in React image","image":"images/17.jpg","image_alt":"A Todo App in React image","seo":{"title":"Todo App in React","description":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Todo App in React","keyName":"property"},{"name":"og:description","value":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage.","keyName":"property"},{"name":"og:image","value":"images/17.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Todo App in React"},{"name":"twitter:description","value":"Es un proyecto que tiene como objetivo aplicar teoría de componentes utilizando Atomic Design bajo el principio de responsabilidad única, para los estilos se utilizó el preprocesador de CSS SASS. Se creó la aplicación con Create React App, se utilizó conceptos de estados de componentes y el ciclo de vida de los mismos, además de varios hooks. La aplicación también utiliza persistencia de datos en el Local Storage."},{"name":"twitter:image","value":"images/17.jpg","relativeUrl":true}]},"layout":"project","markdown_content":"\n## Tabla de Contenidos\n\n-   [Demo](#demo)\n-   [Construcción del proyecto](#construcción-del-proyecto)\n    -   [Composición de componentes](#composición-de-componentes)\n    -   [Preprocesador SASS](#preprocesador-sass)\n    -   [Manejo del estado](#manejo-del-estado)\n-   [Licencia](#licencia)\n-   [Autor](#autor)\n\n## Demo\n\nEl proyecto esta disponible en:\n\n-   [App.](https://arturomauriciodev.github.io/todo-app-react-render/)\n-   [GitHub Repo.](https://github.com/ArturoMauricioDev/todo-app-react-render)\n\nEn la imagen se puede observar la pantalla de inicio, donde se pueden agregar las tareas a realizar.\n\n![Inicio de la aplicacion, agregue una tarea a realizar](https://i66.servimg.com/u/f66/20/43/92/62/localh18.png)\n\nSe despliega un modal, en el cual se escribe la tarea a realizar y se le da en añadir.\n\n![Escibe un nuevo TODO y has clic en añadir](https://i66.servimg.com/u/f66/20/43/92/62/localh19.png)\n\nLas tareas se agregan cronológicamente, también se puede indicar que ya fueron completadas mostrando el total de ellas en la parte superior. Del mismo modo se las pueden eliminar para que desaparezcan de la lista. Asimismo, es bueno mencionar que todos los datos son guardados en el local storage de tal modo que si cerramos el navegador los datos persisten para la próxima vez que se abra el navegador e ingrese a la aplicación.\n\n![Has completado 2 tareas de 4](https://i66.servimg.com/u/f66/20/43/92/62/localh20.png)\n\nSe pueden ingresar caracteres y/o palabras para filtrar las tareas a mostrar en la lista.\n\n![Ingreso la i en el cuadro de búsqueda de tareas](https://i66.servimg.com/u/f66/20/43/92/62/localh21.png)\n\nPor ejemplo, si ingreso \"im\" se desplegaría en la lista de tareas \"Implementar estados a mis componentes\".\n\n![Se ingresa im en el cuadro de búsqueda dando un resultado](https://i66.servimg.com/u/f66/20/43/92/62/localh22.png)\n\nEn caso de no encontrar coincidencias, se despliega un mensaje de \"No hay resultados para:\" el criterio de su búsqueda.\n\n![Se ingresa reac en el cuadro de búsqueda dando ningun reslutado](https://i66.servimg.com/u/f66/20/43/92/62/localh17.png)\n\n## Construcción del proyecto\n\nSe construyó utilizando la metodología `mobile first` para dispositivos de 375px. Asimismo, para los estilos se hace el uso de la metodología `BEM` en el preprocesador `SASS`. También se utiliza `React` para crear componentes utilizando `Atomic Design` y aprovechar los estados de los componentes junto a sus hooks.\n\nA continuación se mostrará algunos detalles y buenas prácticas:\n\n### Composición de componentes\n\n_Componentes de la aplicación_\n\n```\n<TodoHeader>\n    <TodoCounter totalTodos={totalTodos} completedTodos={completedTodos} />\n    <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n</TodoHeader>\n\n<TodoList\n    filteredText={filteredText}\n    totalTodos={totalTodos}\n    searchValue={searchValue}\n    onEmptyTodos={() => <EmptyTodos />}\n    onEmptySearchResults={(searchText) => (\n        <p className=\"empty-todos\">No hay resultados para: {searchText}</p>\n    )}\n    render={(todo) => (\n        <TodoItem\n        key={todo.text}\n        text={todo.text}\n        completed={todo.completed}\n        onComplete={() => toggleTodo(todo.text)}\n        onDelete={() => deleteTodo(todo.text)}\n        />\n    )}\n>\n</TodoList>\n\n{openModal && (\n    <Modal>\n        <TodoForm addTodo={addTodo} setOpenModal={setOpenModal} />\n    </Modal>\n)}\n<CreateTodoButton openModal={openModal} setOpenModal={setOpenModal} />\n\n<ChangeAlertWithStorageListener sincronize={setSincronizedItem} />\n```\n\n### Preprocesador SASS\n\n_Importación de estilos por componente_\n\n```\n//index.scss\n\n@import \"./components/styles/globales.scss\";\n@import \"./components/styles/TodoCounter\";\n@import \"./components/styles/CreateTodoButton\";\n@import \"./components/styles/TodoList\";\n@import \"./components/styles/TodoSearch\";\n@import \"./components/styles/TodoItem.scss\";\n@import \"./components/styles/Modal\";\n@import \"./components/styles/TodoForm\";\n@import \"./components/styles/ChangeAlert\";\n@import \"./components/styles/EmptyTodos\";\n\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  background: $bg-color;\n  font-family: $Fuente1;\n}\n\n#root {\n  margin: 0 24px;\n  min-height: 100vh;\n}\n```\n\n_Uso de variables_\n\n```\n$Fuente1: 'Nunito', sans-serif;\n$color-primario: #29A19C;\n$color-primario-disabled:#29a19c75;\n$color-secundario: #F9F9F9;\n$color-secundario-tranparenci:#f9f9f9ad;\n$color-variante:rgba(249, 249, 249, 0.2);\n$bg-color: #222831;\n$bg-component:#2C3440;\n```\n\n_Anidamiento en los estilos_\n\n```\n.ChangeAlert-bg{\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: #1e1e1f50;\n    z-index: 2;\n    & .alert-container{\n        height: 100%;\n        width: 80%;\n        margin: 0 auto;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        & p{\n            width: 100%;\n            height: 56px;\n            margin: 0;\n            background: #f75858;\n            color: $color-secundario;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-top-left-radius: 4px;\n            border-top-right-radius: 4px;\n            cursor: pointer;\n        }\n        & button{\n            width: 100%;\n            height: 48px;\n            margin: 0;\n            background: $color-secundario;\n            border-bottom-left-radius: 4px;\n            border-bottom-right-radius: 4px;\n            color: $bg-component;\n            font-family: $Fuente1;\n            font-size: 16px;\n            font-weight: 700;\n            border: 1px solid transparent;\n            transition: border 0.15;\n            &:hover{\n                border: $color-secundario-tranparenci;\n            }\n        }\n    }\n}\n```\n\n### Manejo del estado\n\n_Custom hook_\n\n```\n//useTodos.js\n\nimport { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nfunction useTodos() {\n\n    const [todos, saveTodos, setSincronizedItem] = useLocalStorage('TODOS_V1', []);\n\n    const [searchValue, setSearchValue] = useState('');\n    const [openModal, setOpenModal] = useState(false);\n\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    const filteredText = useMemo(() =>\n        todos.filter((todo) => {\n            return todo.text.toLowerCase().includes(searchValue.toLowerCase())\n        }), [todos, searchValue]\n    )\n\n    const toggleTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = !todos[todoIndex].completed;\n        saveTodos(newTodos);\n    }\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        }\n        );\n        saveTodos(newTodos);\n    }\n\n    const states={\n        totalTodos,\n        completedTodos,\n        searchValue,\n        filteredText,\n        openModal,\n    }\n    const stateUpdaters={\n        setSearchValue,\n        toggleTodo,\n        deleteTodo,\n        setOpenModal,\n        addTodo,\n        setSincronizedItem\n    }\n\n    return {states, stateUpdaters}\n}\n\nexport { useTodos }\n```\n\n_Persistencia de datos en el local storage utilizando useEffect y useReducer_\n\n```\n//useLocalStorage.js\n\nimport { useEffect, useReducer } from \"react\"\n\nfunction useLocalStorage(itemName, initialValue) {\n\n    const [state, dispatch] = useReducer(reducer, initialState({ initialValue }));\n    const {\n        sincronizedItem,\n        item\n    } = state\n\n    //Action Creators\n    const onSuccess = (parsedItem) => dispatch({\n        type: actionTypes.success,\n        payload: parsedItem\n    })\n    const onSave = (newItem) => dispatch({\n        type: actionTypes.save,\n        payload: newItem\n    })\n    const onSincronize = ()=> dispatch({\n        type: actionTypes.sincronize\n    })\n\n    useEffect(() => {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n        } else {\n            parsedItem = JSON.parse(localStorageItem);\n        }\n        onSuccess(parsedItem)\n    }, [sincronizedItem])\n\n    const saveItem = (newItem) => {\n        localStorage.setItem(itemName, JSON.stringify(newItem))\n        onSave(newItem)\n    }\n\n    const sincronizeItem = () => {\n        onSincronize()\n    }\n\n    return [\n        item,\n        saveItem,\n        sincronizeItem\n    ]\n}\n\nconst initialState = ({ initialValue }) => ({\n    sincronizedItem: true,\n    item: initialValue\n})\n\nconst actionTypes = {\n    success: 'SUCCESS',\n    save: 'SAVE',\n    sincronize: 'SINCRONIZE'\n}\n\nconst reducerObject = (state, payload) => ({\n    [actionTypes.success]: {\n        ...state,\n        sincronizedItem: true,\n        item: payload\n    },\n    [actionTypes.save]: {\n        ...state,\n        item: payload\n    },\n    [actionTypes.sincronize]: {\n        ...state,\n        sincronizedItem: false,\n    }\n})\n\nconst reducer = (state, action) => {\n    return reducerObject(state, action.payload)[action.type] || state\n}\n\nexport { useLocalStorage };\n```\n\n_Optimizando las búsquedas con useMemo_\n\n```\nconst filteredText = useMemo(() =>\n        todos.filter((todo) => {\n            return todo.text.toLowerCase().includes(searchValue.toLowerCase())\n        }), [todos, searchValue]\n    )\n```\n\n## Licencia\n\n> Este proyecto esta bajo la licencia de MIT.\n\n## Autor\n\nMade with 💜 by [ArturoMauricioDev](https://arturomauricio.bio.link/)\n"}],"data":{"__metadata":{"id":"sourcebit-source-filesystem:data","source":"sourcebit-source-filesystem"},"config":{"__metadata":{"id":"content/data/config.json","source":"sourcebit-source-filesystem","sourceName":"data","sourcePath":"content/data","relSourcePath":"config.json","relProjectPath":"content/data/config.json","modelType":"data","modelName":"config","modelLabel":"Site Configuration"},"title":"Arturo Mauricio","path_prefix":"/","color_scheme":"light","accent_color":"pink","header":{"title":"Arturo Mauricio","has_nav":true,"nav_links":[{"label":"Home","url":"/","style":"link","__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}},{"label":"Portfolio","url":"/portfolio/","style":"link","__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}},{"label":"Blog","url":"/blog/","style":"link","__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}},{"label":"Acerca","url":"/about/","style":"link","__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}},{"label":"Contact","url":"/contact/","style":"link","__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}}],"__metadata":{"modelType":"object","modelName":"header","modelLabel":"Header Configuration"}},"footer":{"content":"Arturo Mauricio Dev | Todos los derechos reservados &copy; 2022","has_social":true,"social_links":[{"label":"Twitter","url":"https://twitter.com/ArturoMauricioD","style":"icon","icon":"twitter","new_window":true,"__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}},{"label":"Instagram","url":"https://www.instagram.com/arturomauriciodev/","style":"icon","icon":"instagram","new_window":true,"__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}},{"label":"GitHub","url":"https://github.com/ArturoMauricioDev","style":"icon","icon":"github","new_window":true,"__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}},{"label":"LinkedIn","url":"https://www.linkedin.com/in/arturomauriciodev/","style":"icon","icon":"linkedin","new_window":true,"__metadata":{"modelType":"object","modelName":"action","modelLabel":"Action"}}],"__metadata":{"modelType":"object","modelName":"footer","modelLabel":"Footer Configuration"}},"domain":"https://amazing-apple-8e624.netlify.app"}}},"__N_SSG":true}